Search.setIndex({"docnames": ["examples", "gallery", "index", "installation", "methods", "modules", "pyESD", "testing", "tutorials"], "filenames": ["examples.rst", "gallery.rst", "index.rst", "installation.rst", "methods.rst", "modules.rst", "pyESD.rst", "testing.rst", "tutorials.rst"], "titles": ["Practical examples", "Gallery", "Akwaaba! Welcome to PyESD Documentation \ud83d\udc4b!", "Installation", "Methods", "API Reference", "pyESD Documentation", "Testing", "tutorials"], "terms": {"The": [0, 2, 3, 4, 6, 7, 8], "packag": [0, 2, 3, 4, 5, 6, 7, 8], "ha": [0, 2, 3, 4, 6], "been": [0, 2, 4], "project": [0, 2, 4, 8], "involv": [0, 2, 4], "actual": 0, "thi": [0, 2, 3, 4, 5, 6, 8], "illustr": [0, 8], "case": [0, 4, 6], "studi": [0, 2, 4], "wa": [0, 2, 6], "describ": [0, 4], "descript": [0, 2, 6], "paper": [0, 4], "pyesd": [0, 1, 3, 4, 5], "boateng": [0, 2, 6], "mutz": [0, 2], "2023": [0, 2], "all": [0, 2, 4, 6, 8], "model": [0, 2, 3, 5], "analysi": [0, 2, 4, 6], "script": [0, 7, 8], "ar": [0, 2, 4, 6, 7, 8], "avail": [0, 4, 6, 8], "github": [0, 2], "also": [0, 2, 4, 6, 8], "zenodo": 0, "support": [0, 4], "materi": 0, "For": [0, 2, 3, 4, 8], "more": [0, 2, 3, 4, 6], "detail": [0, 2, 3, 4, 8], "about": [0, 2, 3, 8], "find": [0, 4, 8], "kindli": [0, 2], "refer": [0, 2, 3, 4, 6, 8], "provid": [0, 2, 3, 4, 6, 8], "20": [0, 6], "obtain": 0, "from": [0, 2, 4, 5, 6, 8], "meteorologi": 0, "agenc": [0, 2], "highlight": [0, 2, 8], "import": [0, 4, 8], "ensembl": [0, 2, 4, 6, 8], "learn": [0, 2, 3, 4, 6, 8], "includ": [0, 2, 3, 4], "due": [0, 2, 4, 8], "difficulti": 0, "predict": [0, 2, 4, 5, 6], "climat": [0, 2, 4, 6], "its": [0, 2, 3, 4, 5, 6, 8], "represent": 0, "reanalysi": [0, 2, 8], "dataset": [0, 2, 3, 4, 5, 6], "we": [0, 2, 4, 8], "train": [0, 2, 4, 6, 8], "compar": [0, 4, 8], "futur": [0, 2, 4, 6], "raw": [0, 4, 8], "output": [0, 2, 4, 6, 8], "rcm": [0, 4], "gcm": [0, 2, 4], "result": [0, 8], "under": [0, 2, 4, 5, 6, 8], "prepar": 0, "were": [0, 2, 6], "present": 0, "last": 0, "year": [0, 2, 6, 8], "": [0, 2, 3, 4, 6, 8], "agu": 0, "link": [0, 4], "opportun": 0, "challeng": [0, 3, 4], "empir": [0, 2, 4, 8], "submit": [0, 2], "earth": 0, "pp": [0, 2, 4, 8], "esd": [0, 2, 4, 6], "framework": [0, 2], "i": [0, 3, 4, 5, 6, 7, 8], "evalu": [0, 2, 4, 5, 6, 8], "perform": [0, 2, 4, 6, 8], "gnip": 0, "across": [0, 4], "europ": 0, "plan": [0, 2, 3], "iso": 0, "simul": [0, 2, 4, 8], "publicli": 0, "collect": 1, "amaz": 1, "thing": 1, "scienc": [1, 2], "done": [1, 6, 8], "python": [2, 4], "framwork": 2, "statist": [2, 4, 6], "an": [2, 3, 4, 6, 8], "open": [2, 4], "sourc": [2, 4, 6, 8], "approach": [2, 4], "ani": [2, 3, 8], "relat": 2, "variabl": [2, 4, 6, 8], "precipit": [2, 6, 8], "temperatur": [2, 4, 6], "wind": 2, "speed": 2, "product": [2, 4], "eg": [2, 6], "era5": [2, 6, 8], "predictor": [2, 4, 5, 6], "featur": [2, 4], "cycl": [2, 4, 6], "data": [2, 3, 4, 6, 7], "preprocess": [2, 6], "select": [2, 4, 6], "construct": [2, 4, 8], "transform": [2, 5, 6], "valid": [2, 4, 6, 7], "serv": [2, 4], "mean": [2, 4, 6, 8], "gener": [2, 4, 6, 7, 8], "circul": [2, 4, 8], "high": [2, 4], "resolut": [2, 4], "relev": [2, 4, 8], "impact": [2, 4], "assess": [2, 4], "drought": 2, "flood": [2, 4], "wildfir": 2, "risk": [2, 6], "other": [2, 4, 6], "main": 2, "specialti": 2, "well": [2, 4, 8], "design": [2, 6, 8], "oop": 2, "style": [2, 6], "consid": [2, 4, 8], "weather": [2, 4, 8], "station": [2, 4, 6, 8], "individu": 2, "object": [2, 4, 6, 8], "routin": [2, 3, 4, 6, 8], "attribut": [2, 6, 8], "ensur": [2, 4], "fewer": 2, "line": 2, "code": [2, 4, 6, 8], "cover": [2, 4, 8], "end": 2, "chang": [2, 4], "mani": [2, 8], "machin": [2, 4], "algorithm": [2, 4, 6], "techniqu": [2, 4, 8], "experi": [2, 4, 8], "toward": 2, "robust": [2, 4, 6], "transfer": [2, 4, 8], "function": [2, 4, 6, 8], "coupl": [2, 4], "estim": [2, 4, 6, 8], "And": 2, "review": 2, "geoscienc": 2, "gmd": 2, "inform": [2, 3, 4, 6], "crucial": [2, 4, 8], "becaus": 2, "widespread": 2, "divers": 2, "effect": [2, 4], "human": 2, "caus": 2, "To": [2, 4, 8], "better": [2, 6], "understand": [2, 3, 4], "essenti": [2, 4], "accur": [2, 4], "condit": 2, "scale": [2, 3, 4, 6], "creat": [2, 3, 4, 6], "strategi": 2, "address": [2, 4], "them": [2, 4, 6, 8], "physic": [2, 4], "base": [2, 4, 6, 8], "numer": 2, "pattern": [2, 4], "differ": [2, 4, 6, 8], "assumpt": [2, 4], "radi": 2, "forc": 2, "howev": [2, 3, 4, 6, 8], "thei": [2, 4, 6], "limit": 2, "while": 2, "replic": [2, 4], "current": [2, 6], "past": [2, 4], "atmospher": [2, 4, 8], "process": [2, 3, 4, 6, 8], "larg": [2, 3, 4], "struggl": 2, "repres": [2, 4], "smaller": [2, 4], "like": [2, 4, 6], "local": [2, 4, 8], "cloud": 2, "certain": 2, "coars": 2, "addition": [2, 4, 6, 8], "adequ": [2, 4], "captur": [2, 4], "region": [2, 4], "variat": [2, 4], "overcom": 2, "need": [2, 3, 4, 6, 8], "allow": 2, "fall": [2, 6], "two": [2, 4, 6], "categori": 2, "mo": 2, "directli": [2, 6], "bia": [2, 4], "correct": 2, "inflex": 2, "ti": 2, "specif": [2, 3, 4, 6], "On": 2, "hand": 2, "observ": [2, 4, 8], "connect": [2, 4], "establish": [2, 4, 8], "relationship": [2, 4], "between": [2, 4, 6], "larger": 2, "act": 2, "complex": [2, 4, 8], "requir": [2, 3, 4, 5, 6, 8], "substanti": 2, "offer": [2, 4, 8], "flexibl": [2, 4], "work": [2, 6, 8], "variou": [2, 4, 7, 8], "tool": [2, 8], "It": [2, 3, 4, 6], "e": [2, 3, 4, 6], "g": [2, 4, 6], "german": 2, "servic": 2, "ghana": 2, "met": 2, "cmip5": [2, 8], "cmip6": [2, 8], "predictand": [2, 4, 5, 8], "extract": [2, 6, 8], "teleconnect": [2, 4, 5], "engin": 2, "choos": [2, 4, 8], "visual": [2, 3], "adapt": [2, 4, 8], "user": [2, 4, 8], "friendli": 2, "given": [2, 6], "directori": [2, 6], "load": [2, 4, 5, 6, 8], "oper": [2, 6], "so": [2, 4, 6], "appli": [2, 4], "exampl": [2, 6, 8], "set": [2, 3, 4, 6, 8], "weatherst": [2, 5, 8], "read_station_csv": [2, 5, 6], "standard": [2, 3, 4, 5], "monthlystandard": [2, 5, 6], "standardsc": [2, 5, 6], "filenam": [2, 6], "station_dir": 2, "varnam": [2, 6, 8], "set_model": [2, 4, 5, 6], "method": [2, 6, 8], "regressor": [2, 4, 5, 6], "score": [2, 4, 5, 6], "cv": [2, 4, 6], "timeseriessplit": 2, "n_split": [2, 4, 6], "10": [2, 4, 6], "version": [2, 3, 6, 7, 8], "doesn": [2, 6], "spatial": 2, "grid": 2, "lack": [2, 4], "capabl": 2, "heavili": [2, 4], "reli": [2, 4], "simpl": [2, 4, 8], "deep": [2, 4, 6], "architectur": 2, "daili": 2, "still": 2, "experiment": 2, "instanc": [2, 4], "possibl": [2, 6, 8], "classifi": 2, "within": [2, 4, 8], "wet": 2, "dry": 2, "befor": [2, 4, 8], "improv": [2, 4, 6], "rainfal": 2, "occurr": 2, "extrem": 2, "event": 2, "pre": 2, "handl": [2, 6], "format": [2, 8], "easili": [2, 8], "suggest": 2, "softwar": 2, "daniel": [2, 6], "websit": [2, 3], "ph": 2, "d": [2, 4, 8], "student": 2, "univers": 2, "t\u00fcbingen": 2, "supervis": 2, "dr": 2, "rer": 2, "nat": 2, "sebastian": 2, "made": 2, "immens": 2, "contribut": 2, "idea": [2, 4], "behind": 2, "alongsid": 2, "hi": 2, "paleoclim": 2, "isotop": 2, "enabl": [2, 4], "dynam": 2, "he": 2, "dedic": 2, "scientif": 2, "aim": [2, 4], "enhanc": [2, 4], "reproduc": 2, "research": [2, 4, 6], "outcom": 2, "believ": 2, "would": [2, 3, 5, 6, 7], "fun": 2, "pyclimat": 2, "anoth": [2, 4], "analyz": [2, 8], "which": [2, 4, 6, 8], "sinc": [2, 6, 8], "first": [2, 3, 6], "dai": 2, "program": 2, "trust": 2, "ttp": 2, "aspect": 2, "life": 2, "If": [2, 3, 6], "you": [2, 3, 4, 6, 8], "re": [2, 4, 6], "interest": [2, 8], "your": [2, 3, 4, 6, 8], "ve": 2, "sure": 2, "step": [2, 3, 4, 6, 8], "applic": [2, 4], "worldwid": 2, "whether": [2, 6], "new": [2, 3, 6], "help": [2, 4, 8], "start": [2, 6, 8], "want": [2, 4], "add": [2, 6], "compon": [2, 8], "found": [2, 4, 7, 8], "bug": [2, 6], "simpli": 2, "discuss": 2, "potenti": [2, 4], "collabor": 2, "sever": [2, 4], "wai": [2, 6], "reach": 2, "out": [2, 4], "1": [2, 4, 6], "question": 2, "our": [2, 8], "assist": [2, 6, 8], "up": [2, 3], "look": 2, "might": [2, 6], "fulli": 2, "initi": [2, 6, 8], "_discuss": 2, "page": 2, "2": [2, 4, 6], "report": 2, "issu": [2, 4, 8], "encount": 2, "feel": 2, "miss": [2, 4], "repositori": 2, "email": 2, "free": [2, 4], "via": 2, "dannboateng": 2, "gmail": 2, "com": [2, 3], "alwai": [2, 8], "thrill": 2, "hear": 2, "being": [2, 4], "util": [2, 4, 6, 8], "incorpor": [2, 4], "activ": [2, 5, 6], "teach": 2, "pleas": [2, 6], "pull": 2, "request": 2, "let": [2, 8], "know": [2, 8], "keep": [2, 3], "track": 2, "thank": 2, "endeavor": 2, "make": [2, 4, 8], "pyesdv1": 2, "0": [2, 6], "geoscientif": 2, "58": [2, 6], "http": 2, "doi": 2, "org": 2, "5194": 2, "67": 2, "arthur": 2, "f": 2, "baidu": 2, "m": [2, 8], "respons": 2, "21st": 2, "centuri": 2, "2022": [2, 6, 8], "h25a": 2, "04": 2, "cite": 2, "articl": 2, "boateng_pyesdv101_2023": 2, "titl": [2, 6], "shorttitl": 2, "url": 2, "copernicu": [2, 8], "languag": 2, "english": 2, "urldat": 2, "07": 2, "24": 2, "journal": 2, "author": [2, 6], "month": [2, 6], "apr": [2, 6], "note": [2, 4, 6], "publish": 2, "gmbh": 2, "file": [2, 6], "full": 2, "text": 2, "pdf": 2, "danielboateng": 2, "zotero": 2, "storag": 2, "89jhu897": 2, "list": [2, 4, 8], "modul": [2, 3, 4, 5, 8], "upcom": 2, "classif": 2, "implement": [2, 4, 6, 8], "optim": [2, 3, 4, 6], "compat": [2, 4, 8], "extend": 2, "predictand_bas": 2, "spatio": 2, "tempor": [2, 4], "accuraci": [2, 4], "3": [2, 6], "time": [2, 4, 6], "seri": [2, 4, 6], "pickl": [2, 6], "zarr": 2, "advantag": [2, 8], "nan": 2, "ml": [2, 4, 8], "4": 2, "southern": [2, 8], "hemispher": [2, 8], "expand": [2, 6], "rang": [2, 4, 6, 8], "esno": 2, "madden": 2, "julian": 2, "oscil": 2, "mjo": 2, "pna": 2, "inclus": [2, 6], "broaden": 2, "5": [2, 4, 6, 8], "benchmark": 2, "addit": [2, 6], "valuabl": 2, "point": 2, "further": [2, 4, 6], "custom": 2, "instal": 2, "tutori": 2, "galleri": 2, "mit": 2, "copyright": 2, "c": [2, 3, 8], "index": [2, 4, 6], "search": 2, "can": [3, 4, 6, 8], "intal": 3, "pip": 3, "same": [3, 4, 6], "edit": 3, "mode": 3, "flag": [3, 7], "updat": [3, 8], "develop": [3, 4, 5, 6], "clone": 3, "git": 3, "dan": 3, "boat": 3, "us": [3, 4, 6, 7], "folder": [3, 6, 7], "recommend": [3, 4, 6], "isol": 3, "environ": 3, "virtualenv": 3, "conda": 3, "some": [3, 4, 6, 8], "through": [3, 4, 6], "distro": 3, "fail": 3, "follow": [3, 4, 6, 8], "manual": 3, "cartopi": 3, "bit": 3, "mind": 3, "necessari": [3, 6], "downscal": [3, 4, 6], "here": [3, 4, 6, 8], "guid": 3, "name": [3, 4, 6, 8], "cartopy_env": 3, "onc": 3, "forg": 3, "channel": 3, "when": [3, 4], "env_nam": 3, "previous": [3, 6], "system": [3, 4], "how": [3, 4, 6], "document": [3, 5], "comprehens": [3, 8], "setup": 3, "sklearn": [3, 6], "u": [3, 8], "scikit": [3, 4], "xarrai": [3, 6], "dask": 3, "netcdf4": 3, "bottleneck": 3, "panda": [3, 6, 8], "seaborn": [3, 6], "tensorflow": 3, "matplotlib": [3, 6], "eof": [3, 4], "option": [3, 6], "xgboost": [3, 4], "explian": 4, "technic": 4, "labori": 4, "must": [4, 6, 8], "carefulli": 4, "right": 4, "maraun": 4, "et": 4, "al": 4, "2019": 4, "guti\u00e9rrez": 4, "These": [4, 6, 8], "stand": 4, "ins": 4, "influenc": 4, "chosen": [4, 8], "enough": [4, 6], "what": 4, "try": 4, "wise": 4, "area": 4, "phenomena": 4, "often": [4, 6], "domin": 4, "therefor": [4, 6], "good": [4, 6], "manag": 4, "emploi": 4, "dimens": [4, 6], "reduct": 4, "trim": 4, "down": 4, "show": [4, 8], "strong": 4, "onli": [4, 6, 8], "tackl": 4, "multicollinear": 4, "highli": 4, "correl": [4, 6, 8], "overfit": 4, "fit": [4, 5, 6], "too": 4, "close": 4, "In": [4, 6, 8], "explor": 4, "three": [4, 6], "wrapper": 4, "recurs": [4, 6], "elimin": 4, "explain": [4, 6, 8], "chen": 4, "jeong": 4, "2007": 4, "iter": 4, "remov": [4, 6], "least": [4, 6], "until": 4, "best": [4, 8], "subset": 4, "tree": 4, "zhou": 4, "2021": [4, 6], "decis": 4, "identifi": [4, 8], "most": [4, 6], "influenti": 4, "sequenti": 4, "As": 4, "ferri": 4, "1994": 4, "combin": [4, 8], "feature_select": [4, 5], "recursivefeatureelimin": [4, 5, 6], "treebasedselect": [4, 5, 6], "sequentialfeatureselect": [4, 5, 6], "respect": [4, 6], "selector_paramet": 4, "true": [4, 6], "cal_relative_import": [4, 6], "varianc": [4, 6], "each": [4, 6, 8], "comput": [4, 6], "date_rang": 4, "predictor_data": 4, "fit_predictor": [4, 5, 6], "predictor_selector": [4, 6], "selector_method": [4, 6], "selector_regressor": [4, 6], "ard": [4, 6], "fals": [4, 6], "default": [4, 6], "drop": 4, "valu": [4, 6, 8], "doe": [4, 6], "timestamp": 4, "calibr": 4, "implic": 4, "interpret": [4, 8], "merit": 4, "replac": [4, 6], "imput": [4, 6], "paramet": [4, 6], "should": [4, 6, 8], "specifi": [4, 6, 8], "linear": [4, 6], "impute_method": [4, 6], "classic": 4, "filter": 4, "analys": [4, 8], "part": [4, 6], "predictor_correl": [4, 5, 6], "corr": 4, "fit_predictand": [4, 6], "pearson": [4, 6], "use_scipi": [4, 6], "practic": [4, 6], "either": 4, "averag": [4, 6], "indic": [4, 6], "signific": [4, 6], "factor": 4, "intric": 4, "have": [4, 6, 8], "proven": 4, "uncov": 4, "hidden": 4, "sophist": 4, "neural": [4, 8], "network": [4, 8], "gain": [4, 8], "attent": 4, "downsiz": 4, "excel": 4, "nonlinear": 4, "vector": 4, "svm": 4, "choic": 4, "map": [4, 6], "low": 4, "dimension": 4, "space": 4, "kernel": [4, 6], "furthermor": [4, 6], "multi": 4, "mitig": 4, "distribut": 4, "locat": [4, 7, 8], "consider": 4, "unfortun": 4, "varieti": 4, "distinct": 4, "theoret": 4, "foundat": 4, "structur": [4, 8], "versatil": 4, "empow": 4, "emerg": 4, "built": 4, "upon": 4, "regress": [4, 6], "lassocv": 4, "lasso": [4, 6], "cross": [4, 6], "lassolarscv": 4, "lassolar": 4, "ridgecv": [4, 8], "ridg": [4, 6], "automat": 4, "determin": [4, 6, 8], "bayesianridg": 4, "bayesian": 4, "gamma": 4, "poisson": 4, "mlp": 4, "layer": [4, 6], "perceptron": 4, "svr": 4, "randomforest": [4, 6], "random": 4, "forest": 4, "extratre": 4, "extra": 4, "bag": 4, "adaboost": 4, "boost": 4, "histgradientboost": 4, "histogram": 4, "gradient": 4, "gradientboost": 4, "sgd": 4, "stochast": 4, "descent": 4, "stack": [4, 6], "mlr": [4, 5], "multipl": [4, 6], "dens": 4, "wide": 4, "tradit": 4, "advanc": 4, "stage": [4, 6], "test": [4, 6], "critic": 4, "junctur": 4, "significantli": 4, "final": [4, 6, 8], "typic": [4, 8], "split": [4, 5, 6], "record": [4, 8], "divid": [4, 6], "constitut": 4, "independ": [4, 6, 8], "phase": 4, "hyperparamet": 4, "gridsearchcv": 4, "fine": 4, "tune": 4, "coeffici": [4, 6], "come": 4, "plai": 4, "break": 4, "segment": 4, "guard": 4, "against": [4, 6, 8], "among": 4, "k": [4, 6], "fold": [4, 6], "commonli": 4, "equal": 4, "separ": [4, 6], "subsampl": 4, "call": [4, 6], "one": [4, 6, 8], "remain": [4, 6], "form": [4, 8], "leav": 4, "altern": 4, "ident": 4, "treat": 4, "without": [4, 8], "memori": 4, "sampl": [4, 6], "mai": [4, 8], "hold": [4, 6], "season": [4, 6], "monthli": [4, 6, 8], "bootstrap": [4, 6], "resampl": 4, "splitter": [4, 5], "metric": [4, 5, 8], "r2": [4, 6], "root": 4, "squar": [4, 6], "error": [4, 6], "rmse": [4, 5, 6], "absolut": [4, 6], "mae": [4, 5, 6], "reflect": 4, "dure": [4, 6], "arithmet": [4, 6], "defin": [4, 6, 8], "abov": 4, "cost": 4, "ensemble_learn": [4, 6], "base_estim": 4, "final_estimator_nam": [4, 6], "final_estim": 4, "daterang": [4, 6], "from1958to2010": 4, "predictor_dataset": [4, 6], "era5data": [4, 8], "kfold": 4, "driven": 4, "greenhous": 4, "ga": 4, "concentr": 4, "scenario": [4, 8], "similar": [4, 6], "kolmogorov": [4, 6], "smirnov": [4, 6], "null": 4, "hypothesi": 4, "h_0": 4, "recreat": 4, "reconstruct": 4, "multivari": 4, "nao": [4, 5, 6, 8], "ea": [4, 5, 6, 8], "scan": [4, 5, 6, 8], "pressur": [4, 8], "anomali": [4, 6], "onto": 4, "orthogon": [4, 8], "preserv": 4, "take": [4, 8], "input": [4, 6], "ad": [4, 8], "drive": 4, "frequenc": [4, 6], "agricultur": 4, "water": 4, "resourc": 4, "integr": 4, "bridg": 4, "gap": 4, "sector": 4, "print": 4, "rcp": 4, "6": 4, "yhat_cmip5_rcp26_r1_anomali": 4, "fullcmip5": 4, "cmip5_rcp26_r1": [4, 8], "params_from": [4, 6], "cmip5_amip_r1": 4, "patterns_from": [4, 6], "submodul": 5, "stationoper": 5, "climate_scor": [5, 6], "cross_validate_and_predict": [5, 6], "ensemble_transform": [5, 6], "get_explained_vari": [5, 6], "get_var": [5, 6], "relative_predictor_import": [5, 6], "save": [5, 6], "selected_nam": [5, 6], "set_predictor": [5, 6], "set_standard": [5, 6], "set_transform": [5, 6], "tree_based_feature_import": [5, 6], "tree_based_feature_permutation_import": [5, 6], "load_stat": [5, 6], "esd_util": [5, 8], "computestat": [5, 6], "get": [5, 6, 8], "midpointnorm": [5, 6], "stackarrai": [5, 6], "stattest": [5, 6], "_get_month": [5, 6], "extract_indices_around": [5, 6], "extract_region": [5, 6], "haversin": [5, 6], "levene_test": [5, 6], "load_all_st": [5, 6], "load_csv": [5, 6], "load_pickl": [5, 6], "map_to_xarrai": [5, 6], "plot_background": [5, 6], "plot_ks_stat": [5, 6], "ranksums_test": [5, 6], "store_csv": [5, 6], "store_pickl": [5, 6], "predictor_bas": 5, "plot": [5, 8], "predictor_gener": 5, "regionalaverag": [5, 6], "read_weatherstationnam": [5, 6, 8], "read_weatherst": [5, 6], "dense_model": 5, "deeplearningregressor": [5, 6], "build_model": [5, 6], "compile_model": [5, 6], "convert_to_sklearn_regressor": [5, 6], "plot_network": [5, 6], "ensemble_model": 5, "ensembleregressor": [5, 6], "cross_val_predict": [5, 6], "cross_val_scor": [5, 6], "cross_valid": [5, 6], "get_param": [5, 6], "predict_averag": [5, 6], "cv_test_scor": [5, 6], "print_selected_featur": [5, 6], "feature_import": [5, 6], "permutation_importance_": [5, 6], "mse": [5, 6], "nse": [5, 6], "r2_score": [5, 6], "adjusted_r2": [5, 6], "explained_vari": [5, 6], "max_error": [5, 6], "hyperparameteroptim": [5, 6], "best_estim": [5, 6], "predict_log_proba": [5, 6], "metaattribut": [5, 6], "alpha": [5, 6], "best_param": [5, 6], "coef": [5, 6], "intercept": [5, 6], "set_param": [5, 6], "barplot": [5, 6], "boxplot": [5, 6], "correlation_heatmap": [5, 6], "heatmap": [5, 6], "lineplot": [5, 6], "plot_monthly_mean": [5, 6], "plot_projection_comparison": [5, 6], "plot_time_seri": [5, 6], "scatterplot": [5, 6], "plot_util": 5, "apply_styl": [5, 6], "barplot_data": [5, 6], "boxplot_data": [5, 6], "correlation_data": [5, 6], "count_predictor": [5, 6], "extract_comparison_data_mean": [5, 6], "extract_time_seri": [5, 6], "monthly_mean": [5, 6], "prediction_example_data": [5, 6], "resample_monthli": [5, 6], "resample_season": [5, 6], "seasonal_mean": [5, 6], "predictandtimeseri": [5, 6], "monthlybooststrapp": [5, 6], "get_n_split": [5, 6], "yearlybootstrapp": [5, 6], "inverse_transform": [5, 6], "nostandard": [5, 6], "pcascal": [5, 6], "fit_transform": [5, 6], "add_seasonal_cycl": [5, 6], "get_annual_mean_cycl": [5, 6], "get_mean_predict": [5, 6], "remove_seasonal_cycl": [5, 6], "plot_cov_matrix": [5, 6], "eawr": [5, 6], "mei": [5, 6], "eof_analysi": [5, 6], "data_preprocessing_util": 5, "bootstrappedforwardselect": [5, 6], "bootstrappedregress": [5, 6], "fit_predict": [5, 6], "forwardselect": [5, 6], "average_additional_result": [5, 6], "average_coef": [5, 6], "fit_act": [5, 6], "predict_act": [5, 6], "set_additional_result": [5, 6], "multiplelsregress": [5, 6], "set_expand_coef": [5, 6], "_get_act": [5, 6], "upgrad": 5, "benefit": 5, "extens": 5, "abou": 6, "metadata": 6, "sun": 6, "nov": 6, "21": 6, "00": 6, "55": 6, "37": 6, "dboateng": [6, 8], "class": 6, "lat": 6, "lon": 6, "elev": [6, 8], "fit_period": 6, "score_period": 6, "predictor_kwarg": 6, "calcul": 6, "string": 6, "pd": [6, 8], "datetimeindex": 6, "stat_downscaling_tool": 6, "keyword": 6, "argument": 6, "pass": 6, "return": 6, "cscore": 6, "rho": 6, "perfect": 6, "skill": [6, 8], "neg": 6, "even": 6, "wors": 6, "than": 6, "type": 6, "doubl": 6, "return_cv_scor": 6, "num_predictor": 6, "none": 6, "selector_direct": 6, "impute_ord": 6, "otherwis": 6, "arrai": 6, "zero": 6, "fname": 6, "str": [6, 8], "where": 6, "store": 6, "self": 6, "_": 6, "neg_root_mean_squared_error": 6, "cachedir": 6, "radiu": [6, 8], "250": 6, "detrend": 6, "fri": 6, "12": [6, 8], "14": 6, "02": 6, "28": 6, "contian": 6, "sx": 6, "y": 6, "sy": [6, 8], "return_scor": 6, "parmap": 6, "domain_nam": [6, 8], "select_domain": 6, "is_dataset": 6, "vmin": 6, "vmax": 6, "midpoint": 6, "clip": 6, "normal": 6, "At": 6, "moment": 6, "diverg": 6, "colormap": 6, "colorbar": 6, "both": [6, 8], "magnitud": 6, "color": 6, "offsetnorm": 6, "origin": 6, "joe": 6, "kingto": 6, "modifi": [6, 7], "bar": 6, "own": 6, "non": 6, "quantit": 6, "float": 6, "minimum": 6, "maximum": 6, "__call__": 6, "A": 6, "autoscale_non": 6, "bool": 6, "outsid": [6, 8], "whichev": 6, "closer": [6, 8], "mask": 6, "silent": 6, "defeat": 6, "purpos": 6, "over": [6, 8], "lead": 6, "surpris": 6, "x": 6, "dim": 6, "left": 6, "dataarrai": 6, "sole": 6, "after": [6, 8], "parallel": 6, "xr": 6, "along": 6, "p": 6, "except": 6, "scalar": 6, "Or": 6, "singl": 6, "sign": 6, "mw": 6, "mann": 6, "whitnei": 6, "wc": 6, "wilcoxon": 6, "t": 6, "run": [6, 7], "pvalx": 6, "contain": [6, 8], "npdatetime64": 6, "januari": 6, "februari": 6, "datarang": 6, "minlat": 6, "maxlat": 6, "minlon": 6, "maxlon": 6, "lon1": 6, "lat1": 6, "lon2": 6, "lat2": 6, "path": [6, 8], "stationnam": 6, "assum": [6, 8], "quantiti": 6, "dictionari": 6, "datarrai": 6, "domain": [6, 8], "ax": 6, "left_label": 6, "bottom_label": 6, "plot_coastlin": 6, "plot_bord": 6, "funtion": 6, "background": 6, "imshow": 6, "param": 6, "domian": 6, "south": 6, "america": 6, "alaska": 6, "tibet": 6, "plateau": 6, "himalaya": 6, "eurosia": 6, "zealand": 6, "global": [6, 8], "cmap": 6, "level": [6, 7, 8], "center": [6, 8], "output_nam": 6, "output_format": 6, "level_tick": 6, "path_to_stor": [6, 8], "add_colorbar": 6, "hatch": 6, "fig": 6, "cbar_po": 6, "use_colorbar_default": 6, "orient": 6, "horizont": 6, "plot_project": 6, "plot_stat": 6, "stats_result": 6, "var": 6, "45": 6, "longnam": 6, "abc": 6, "regener": 6, "plot_kwarg": 6, "03": 6, "09": 6, "standardizer_constructor": 6, "kwarg": 6, "01": [6, 8], "43": 6, "download": [6, 8], "dwd": [6, 8], "number": 6, "write": 6, "read": [6, 8], "downlod": 6, "contact": 6, "uni": 6, "tuebingen": 6, "de": 6, "return_al": 6, "varibal": 6, "rais": 6, "valueerror": 6, "w": 6, "path_to_data": [6, 8], "namedict": 6, "dict": 6, "rel": 6, "wed": 6, "mar": 6, "16": 6, "26": 6, "adam": 6, "loss": 6, "mean_squared_error": 6, "rootmeansquarederror": 6, "epoch": 6, "1000": 6, "verbos": [6, 7], "mon": 6, "11": 6, "35": 6, "n_job": 6, "passthrough": 6, "jan": 6, "17": 6, "18": 6, "regressor_nam": 6, "n_featur": 6, "direct": 6, "forward": 6, "fig_path": 6, "fig_nam": 6, "save_fig": 6, "station_nam": 6, "34": 6, "25": 6, "y_true": 6, "y_pred": 6, "thu": 6, "param_grid": 6, "hyper_method": 6, "xlabel": 6, "ylabel": 6, "test_r2": 6, "varname_std": 6, "test_r2_std": 6, "validation_score_": 6, "legend": 6, "show_error": 6, "width": 6, "rot": 6, "use_id": 6, "patch_artist": 6, "cbar_ax": 6, "add_cbar": 6, "label": 6, "coefficinet": 6, "cbar": 6, "station_num": 6, "obs_train_nam": 6, "ob": 6, "1958": [6, 8], "2010": 6, "obs_test_nam": 6, "2011": 6, "2020": 6, "val_predict_nam": 6, "test_predict_nam": 6, "obs_full_nam": 6, "std": 6, "lolim": 6, "id_nam": 6, "stationloc_dir": 6, "dataset_varnam": 6, "figpath": 6, "fignam": 6, "ymax": 6, "ymin": 6, "window": 6, "train_mark": 6, "test_mark": 6, "o": [6, 8], "train_color": 6, "black": 6, "test_color": 6, "blue": 6, "49": 6, "fontsiz": 6, "linewidth": 6, "usetex": 6, "bmh": 6, "fivethirtyeight": 6, "use_cv_al": 6, "22": 6, "much": 6, "period": 6, "annual": 6, "mlr_learn": 6, "tue": 6, "52": 6, "13": 6, "500": 6, "test_siz": 6, "block_siz": 6, "group": 6, "num_block": 6, "num_sampl": 6, "n_block": 6, "shuffl": 6, "3333333333333333": 6, "min_month_per_year": 6, "9": 6, "pick": 6, "complet": [6, 8], "yb": 6, "enumer": 6, "x_train": 6, "y_train": 6, "iloc": 6, "x_test": 6, "y_test": 6, "int": [6, 8], "ratio": 6, "pair": 6, "datafram": 6, "dummi": 6, "baseestim": 6, "transformermixin": 6, "possibli": 6, "trend": 6, "affect": 6, "subtract": 6, "afterward": 6, "Not": 6, "x_unstandard": 6, "unstandard": 6, "x_transform": 6, "just": 6, "noth": 6, "n_compon": 6, "fit_param": 6, "shape": 6, "n_sampl": 6, "n_output": 6, "target": 6, "unsupervis": 6, "x_new": 6, "ndarrai": 6, "n_features_new": 6, "with_std": 6, "with_mean": 6, "unit_vari": 6, "norm": 6, "l2": 6, "mean_seasonal_cycl": 6, "numpi": [6, 8], "column": 6, "invers": 6, "59": 6, "neof": 6, "eof_packag": 6, "apply_equal_wtg": 6, "pcscale": 6, "7": 6, "48": 6, "There": 6, "outer": 6, "loop": 6, "member": 6, "next": 6, "again": 6, "get_coef": 6, "set_coef": 6, "mlr_model": 6, "min_explained_vari": 6, "easi": 6, "interfac": 6, "below": 6, "amount": 6, "stop": 6, "integ": 6, "n": 6, "some_object": 6, "metaestim": 6, "linearmodel": 6, "coef_": 6, "intercept_": 6, "someth": 6, "els": 6, "taken": 6, "everyth": 6, "inherit": 6, "extent": 6, "interchangibli": 6, "list_of_coef": 6, "additional_result": 6, "list_of_dict": 6, "mean_additional_result": 6, "mean_coef": 6, "depend": [6, 8], "nonzero": 6, "cv_error": 6, "stepwis": 6, "promis": 6, "candid": 6, "outlin": 6, "von": 6, "storch": 6, "1999": 6, "intend": 6, "explaned_vari": 6, "list_of_param": 6, "accord": 6, "yhat": 6, "inact": 6, "uncertainti": 6, "deviat": 6, "lowest": 6, "abort": 6, "previou": 6, "row": [6, 8], "length": 6, "exp_var": 6, "whose": 6, "add_result": 6, "linearcoefshandlermixin": 6, "ol": 6, "n_predictor": 6, "matrix": 6, "x_activ": 6, "synthet": 7, "v": 7, "higher": 7, "section": 8, "focu": 8, "germani": 8, "randomli": 8, "pool": 8, "1500": 8, "post": 8, "correspond": 8, "achiev": 8, "showcas": 8, "jupyt": 8, "notebook": 8, "instruct": 8, "explan": 8, "cdc": 8, "data_preprocess_util": 8, "extract_dwddata_with_more_yr": 8, "add_info_to_data": 8, "main_path": 8, "desktop": 8, "southern_germani": 8, "data_files_path": 8, "join": 8, "path_data_consid": 8, "path_data_process": 8, "path_data_info": 8, "sdo_obs_deu_p1m_rr": 8, "csv": 8, "exist": 8, "makedir": 8, "meet": 8, "60": 8, "min_yr": 8, "glob_nam": 8, "start_dat": 8, "end_dat": 8, "data_freq": 8, "path_to_info": 8, "longitud": 8, "latitud": 8, "sixth": 8, "onward": 8, "ll": 8, "date": 8, "regard": 8, "200km": 8, "conveni": 8, "opt": 8, "although": 8, "mandatori": 8, "read_data": 8, "py": 8, "total": 8, "tp": 8, "throughout": 8, "demonstr": 8, "socket": 8, "np": 8, "200": 8, "km": 8, "contruct": 8, "TO": 8, "era5_datadir": 8, "monthly_1950_2021": 8, "cmip5_26_datadir": 8, "mipesm": 8, "rcp26": 8, "cmip5_45_datadir": 8, "rcp45": 8, "cmip5_85_datadir": 8, "rcp85": 8, "station_prec_datadir": 8, "python_script": 8, "esd_packag": 8, "predictordir": 8, "dirnam": 8, "__file__": 8, "predictors_": 8, "cachedir_prec": 8, "abspath": 8, "pardir": 8, "final_cache_precipit": 8, "t2m": 8, "t2m_monthli": 8, "nc": 8, "msl": 8, "msl_monthli": 8, "u10": 8, "u10_monthli": 8, "v10": 8, "v10_monthli": 8, "z250": 8, "z250_monthli": 8, "z500": 8, "z500_monthli": 8, "z700": 8, "z700_monthli": 8, "z850": 8, "z850_monthli": 8, "z1000": 8, "z1000_monthli": 8, "tp_monthli": 8, "q850": 8, "q850_monthli": 8, "q500": 8, "q500_monthli": 8, "t250": 8, "t250_monthli": 8, "t500": 8, "t500_monthli": 8, "t700": 8, "t700_monthli": 8, "t850": 8, "t850_monthli": 8, "t1000": 8, "t1000_monthli": 8, "r250": 8, "r250_monthli": 8, "r500": 8, "r500_monthli": 8, "r700": 8, "r700_monthli": 8, "r850": 8, "r850_monthli": 8, "r1000": 8, "r1000_monthli": 8, "vo850": 8, "vo850_monthli": 8, "vo500": 8, "vo500_monthli": 8, "pv850": 8, "pv850_monthli": 8, "pv500": 8, "pv500_monthli": 8, "u250": 8, "u250_monthli": 8, "u500": 8, "u500_monthli": 8, "u700": 8, "u700_monthli": 8, "u850": 8, "u850_monthli": 8, "u1000": 8, "u1000_monthli": 8, "v250": 8, "v250_monthli": 8, "v500": 8, "v500_monthli": 8, "v700": 8, "v700_monthli": 8, "v850": 8, "v850_monthli": 8, "v1000": 8, "v1000_monthli": 8, "sst": 8, "sst_monthli": 8, "d2m": 8, "d2m_monthli": 8, "dtd250": 8, "dtd250_monthli": 8, "dtd500": 8, "dtd500_monthli": 8, "dtd700": 8, "dtd700_monthli": 8, "dtd850": 8, "dtd850_monthli": 8, "dtd1000": 8, "dtd1000_monthli": 8, "nh": 8, "northern": 8, "cmip5_rcp45_r1": 8, "cmip5_rcp85_r1": 8, "namedict_prec": 8, "stationnames_prec": 8, "multitud": 8, "judici": 8, "meaning": 8, "straightforward": 8, "baselin": 8, "highest": 8, "inter": 8, "One": 8, "predomin": 8, "sea": 8, "geopotenti": 8, "abil": 8, "decid": 8, "catchment": 8, "regular": 8, "comparison": 8, "emiss": 8, "mpi": 8, "esm": 8, "consist": 8, "insight": 8, "cool": 8, "enjoi": 8}, "objects": {"": [[6, 0, 0, "-", "pyESD"]], "pyESD": [[6, 0, 0, "-", "ESD_utils"], [6, 0, 0, "-", "MLR_model"], [6, 0, 0, "-", "Predictor_Base"], [6, 0, 0, "-", "Predictor_Generator"], [6, 0, 0, "-", "StationOperator"], [6, 0, 0, "-", "Weatherstation"], [6, 0, 0, "-", "dense_models"], [6, 0, 0, "-", "ensemble_models"], [6, 0, 0, "-", "feature_selection"], [6, 0, 0, "-", "metrics"], [6, 0, 0, "-", "models"], [6, 0, 0, "-", "plot"], [6, 0, 0, "-", "plot_utils"], [6, 0, 0, "-", "predictand"], [6, 0, 0, "-", "splitter"], [6, 0, 0, "-", "standardizer"], [6, 0, 0, "-", "teleconnections"]], "pyESD.ESD_utils": [[6, 1, 1, "", "ComputeStat"], [6, 2, 1, "", "Dataset"], [6, 2, 1, "", "MidpointNormalize"], [6, 1, 1, "", "StackArray"], [6, 1, 1, "", "StatTest"], [6, 1, 1, "", "_get_month"], [6, 1, 1, "", "extract_indices_around"], [6, 1, 1, "", "extract_region"], [6, 1, 1, "", "haversine"], [6, 1, 1, "", "levene_test"], [6, 1, 1, "", "load_all_stations"], [6, 1, 1, "", "load_csv"], [6, 1, 1, "", "load_pickle"], [6, 1, 1, "", "map_to_xarray"], [6, 1, 1, "", "plot_background"], [6, 1, 1, "", "plot_ks_stats"], [6, 1, 1, "", "ranksums_test"], [6, 1, 1, "", "store_csv"], [6, 1, 1, "", "store_pickle"]], "pyESD.ESD_utils.Dataset": [[6, 3, 1, "", "get"]], "pyESD.MLR_model": [[6, 2, 1, "", "BootstrappedForwardSelection"], [6, 2, 1, "", "BootstrappedRegression"], [6, 2, 1, "", "ForwardSelection"], [6, 2, 1, "", "MultipleLSRegression"], [6, 1, 1, "", "_get_active"]], "pyESD.MLR_model.BootstrappedRegression": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_predict"], [6, 3, 1, "", "predict"]], "pyESD.MLR_model.ForwardSelection": [[6, 3, 1, "", "average_additional_results"], [6, 3, 1, "", "average_coefs"], [6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_active"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "predict_active"], [6, 3, 1, "", "set_additional_results"]], "pyESD.MLR_model.MultipleLSRegression": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "set_expand_coefs"]], "pyESD.Predictor_Base": [[6, 2, 1, "", "Predictor"]], "pyESD.Predictor_Base.Predictor": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "get"], [6, 3, 1, "", "load"], [6, 3, 1, "", "plot"], [6, 3, 1, "", "save"]], "pyESD.Predictor_Generator": [[6, 2, 1, "", "RegionalAverage"]], "pyESD.StationOperator": [[6, 2, 1, "", "StationOperator"], [6, 1, 1, "", "load_station"]], "pyESD.StationOperator.StationOperator": [[6, 3, 1, "", "climate_score"], [6, 3, 1, "", "cross_validate_and_predict"], [6, 3, 1, "", "ensemble_transform"], [6, 3, 1, "", "evaluate"], [6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_predictor"], [6, 3, 1, "", "get_explained_variance"], [6, 3, 1, "", "get_var"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "predictor_correlation"], [6, 3, 1, "", "relative_predictor_importance"], [6, 3, 1, "", "save"], [6, 3, 1, "", "selected_names"], [6, 3, 1, "", "set_model"], [6, 3, 1, "", "set_predictors"], [6, 3, 1, "", "set_standardizer"], [6, 3, 1, "", "set_transform"], [6, 3, 1, "", "tree_based_feature_importance"], [6, 3, 1, "", "tree_based_feature_permutation_importance"]], "pyESD.Weatherstation": [[6, 1, 1, "", "read_station_csv"], [6, 1, 1, "", "read_weatherstationnames"], [6, 1, 1, "", "read_weatherstations"]], "pyESD.dense_models": [[6, 2, 1, "", "DeepLearningRegressor"]], "pyESD.dense_models.DeepLearningRegressor": [[6, 3, 1, "", "build_model"], [6, 3, 1, "", "compile_model"], [6, 3, 1, "", "convert_to_sklearn_regressor"], [6, 3, 1, "", "fit"], [6, 3, 1, "", "plot_network"], [6, 3, 1, "", "predict"]], "pyESD.ensemble_models": [[6, 2, 1, "", "EnsembleRegressor"]], "pyESD.ensemble_models.EnsembleRegressor": [[6, 3, 1, "", "cross_val_predict"], [6, 3, 1, "", "cross_val_score"], [6, 3, 1, "", "cross_validate"], [6, 3, 1, "", "fit"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "predict_average"], [6, 3, 1, "", "score"], [6, 3, 1, "", "transform"]], "pyESD.feature_selection": [[6, 2, 1, "", "RecursiveFeatureElimination"], [6, 2, 1, "", "SequentialFeatureSelection"], [6, 2, 1, "", "TreeBasedSelection"]], "pyESD.feature_selection.RecursiveFeatureElimination": [[6, 3, 1, "", "cv_test_score"], [6, 3, 1, "", "fit"], [6, 3, 1, "", "print_selected_features"], [6, 3, 1, "", "score"], [6, 3, 1, "", "transform"]], "pyESD.feature_selection.SequentialFeatureSelection": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "print_selected_features"], [6, 3, 1, "", "score"], [6, 3, 1, "", "transform"]], "pyESD.feature_selection.TreeBasedSelection": [[6, 3, 1, "", "feature_importance"], [6, 3, 1, "", "fit"], [6, 3, 1, "", "permutation_importance_"], [6, 3, 1, "", "print_selected_features"], [6, 3, 1, "", "transform"]], "pyESD.metrics": [[6, 2, 1, "", "Evaluate"]], "pyESD.metrics.Evaluate": [[6, 3, 1, "", "MAE"], [6, 3, 1, "", "MSE"], [6, 3, 1, "", "NSE"], [6, 3, 1, "", "R2_score"], [6, 3, 1, "", "RMSE"], [6, 3, 1, "", "adjusted_r2"], [6, 3, 1, "", "explained_variance"], [6, 3, 1, "", "max_error"]], "pyESD.models": [[6, 2, 1, "", "HyperparameterOptimize"], [6, 2, 1, "", "MetaAttributes"], [6, 2, 1, "", "Regressors"]], "pyESD.models.HyperparameterOptimize": [[6, 3, 1, "", "best_estimator"], [6, 3, 1, "", "cross_val_predict"], [6, 3, 1, "", "cross_val_score"], [6, 3, 1, "", "cross_validate"], [6, 3, 1, "", "fit"], [6, 3, 1, "", "predict_log_proba"], [6, 3, 1, "", "score"], [6, 3, 1, "", "transform"]], "pyESD.models.MetaAttributes": [[6, 3, 1, "", "alpha"], [6, 3, 1, "", "best_estimator"], [6, 3, 1, "", "best_params"], [6, 3, 1, "", "coef"], [6, 3, 1, "", "get_params"], [6, 3, 1, "", "intercept"], [6, 3, 1, "", "set_params"]], "pyESD.models.Regressors": [[6, 3, 1, "", "cross_val_predict"], [6, 3, 1, "", "cross_val_score"], [6, 3, 1, "", "cross_validate"], [6, 3, 1, "", "fit"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "score"], [6, 3, 1, "", "set_model"]], "pyESD.plot": [[6, 1, 1, "", "barplot"], [6, 1, 1, "", "boxplot"], [6, 1, 1, "", "correlation_heatmap"], [6, 1, 1, "", "heatmaps"], [6, 1, 1, "", "lineplot"], [6, 1, 1, "", "plot_monthly_mean"], [6, 1, 1, "", "plot_projection_comparison"], [6, 1, 1, "", "plot_time_series"], [6, 1, 1, "", "scatterplot"]], "pyESD.plot_utils": [[6, 1, 1, "", "apply_style"], [6, 1, 1, "", "barplot_data"], [6, 1, 1, "", "boxplot_data"], [6, 1, 1, "", "correlation_data"], [6, 1, 1, "", "count_predictors"], [6, 1, 1, "", "extract_comparison_data_means"], [6, 1, 1, "", "extract_time_series"], [6, 1, 1, "", "monthly_mean"], [6, 1, 1, "", "prediction_example_data"], [6, 1, 1, "", "resample_monthly"], [6, 1, 1, "", "resample_seasonally"], [6, 1, 1, "", "seasonal_mean"]], "pyESD.predictand": [[6, 2, 1, "", "PredictandTimeseries"]], "pyESD.predictand.PredictandTimeseries": [[6, 3, 1, "", "climate_score"], [6, 3, 1, "", "cross_validate_and_predict"], [6, 3, 1, "", "ensemble_transform"], [6, 3, 1, "", "evaluate"], [6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_predictor"], [6, 3, 1, "", "get"], [6, 3, 1, "", "predict"], [6, 3, 1, "", "predictor_correlation"], [6, 3, 1, "", "relative_predictor_importance"], [6, 3, 1, "", "selected_names"], [6, 3, 1, "", "set_model"], [6, 3, 1, "", "set_predictors"], [6, 3, 1, "", "set_standardizer"], [6, 3, 1, "", "set_transform"], [6, 3, 1, "", "tree_based_feature_importance"], [6, 3, 1, "", "tree_based_feature_permutation_importance"]], "pyESD.splitter": [[6, 2, 1, "", "MonthlyBooststrapper"], [6, 2, 1, "", "Splitter"], [6, 2, 1, "", "YearlyBootstrapper"]], "pyESD.splitter.MonthlyBooststrapper": [[6, 3, 1, "", "split"]], "pyESD.splitter.Splitter": [[6, 3, 1, "", "get_n_splits"], [6, 3, 1, "", "split"]], "pyESD.splitter.YearlyBootstrapper": [[6, 3, 1, "", "split"]], "pyESD.standardizer": [[6, 2, 1, "", "MonthlyStandardizer"], [6, 2, 1, "", "NoStandardizer"], [6, 2, 1, "", "PCAScaling"], [6, 2, 1, "", "StandardScaling"], [6, 1, 1, "", "add_seasonal_cycle"], [6, 1, 1, "", "get_annual_mean_cycle"], [6, 1, 1, "", "get_mean_prediction"], [6, 1, 1, "", "remove_seasonal_cycle"]], "pyESD.standardizer.MonthlyStandardizer": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "transform"]], "pyESD.standardizer.NoStandardizer": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "transform"]], "pyESD.standardizer.PCAScaling": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "fit_transform"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "transform"]], "pyESD.standardizer.StandardScaling": [[6, 3, 1, "", "fit"], [6, 3, 1, "", "inverse_transform"], [6, 3, 1, "", "transform"]], "pyESD.teleconnections": [[6, 2, 1, "", "EA"], [6, 2, 1, "", "EAWR"], [6, 2, 1, "", "MEI"], [6, 2, 1, "", "NAO"], [6, 2, 1, "", "SCAN"], [6, 1, 1, "", "_get_month"], [6, 1, 1, "", "eof_analysis"], [6, 1, 1, "", "extract_region"]], "pyESD.teleconnections.EA": [[6, 3, 1, "", "plot_cov_matrix"]], "pyESD.teleconnections.EAWR": [[6, 3, 1, "", "plot_cov_matrix"]], "pyESD.teleconnections.NAO": [[6, 3, 1, "", "plot_cov_matrix"]], "pyESD.teleconnections.SCAN": [[6, 3, 1, "", "plot_cov_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"practic": 0, "exampl": 0, "1": 0, "downscal": [0, 2, 8], "precipit": 0, "temperatur": 0, "weather": 0, "station": 0, "locat": 0, "neckar": 0, "catchment": 0, "southwestern": 0, "germani": 0, "2": 0, "synopt": 0, "ghana": 0, "us": [0, 2, 8], "stack": 0, "gener": 0, "3": 0, "base": 0, "statist": 0, "emul": 0, "stabl": 0, "oxygen": 0, "isotop": 0, "galleri": 1, "akwaaba": 2, "welcom": 2, "pyesd": [2, 6, 8], "document": [2, 6], "why": 2, "i": 2, "import": 2, "what": [2, 8], "perfect": 2, "prognosi": 2, "can": 2, "do": [2, 8], "t": 2, "who": 2, "develop": 2, "get": 2, "touch": 2, "u": 2, "some": 2, "paper": 2, "preprint": 2, "have": 2, "licens": 2, "indic": [2, 8], "tabl": 2, "instal": 3, "from": 3, "pypi": 3, "github": 3, "common": 3, "issu": 3, "depend": 3, "method": 4, "model": [4, 6, 8], "framework": [4, 7], "api": 5, "refer": 5, "submodul": 6, "stationoper": 6, "modul": 6, "esd_util": 6, "predictor_bas": 6, "predictor_gener": 6, "weatherst": 6, "dense_model": 6, "ensemble_model": 6, "feature_select": 6, "metric": 6, "plot": 6, "plot_util": 6, "predictand": 6, "splitter": 6, "standard": 6, "teleconnect": [6, 8], "data_preprocessing_util": 6, "mlr": 6, "test": 7, "unittest": 7, "tutori": 8, "climat": 8, "inform": 8, "preprocess": 8, "data": 8, "dataset": 8, "look": 8, "like": 8, "select": 8, "predictor": 8, "esd": 8, "includ": 8, "larg": 8, "scale": 8, "how": 8, "optim": 8, "coupl": 8, "gcm": 8, "futur": 8, "predict": 8, "visual": 8, "analysi": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Practical examples": [[0, "practical-examples"]], "1. Downscaling of precipitation and temperature for weather station located in the Neckar catchment, Southwestern Germany \ud83c\udf0e": [[0, "downscaling-of-precipitation-and-temperature-for-weather-station-located-in-the-neckar-catchment-southwestern-germany"]], "2. Downscaling of precipitation for synoptic weather stations in Ghana \ud83c\udf0d using Stacked Generalization": [[0, "downscaling-of-precipitation-for-synoptic-weather-stations-in-ghana-using-stacked-generalization"]], "3. Station-based statistical emulators for stable oxygen isotopes": [[0, "station-based-statistical-emulators-for-stable-oxygen-isotopes"]], "Gallery": [[1, "gallery"]], "Akwaaba! Welcome to PyESD Documentation \ud83d\udc4b!": [[2, "akwaaba-welcome-to-pyesd-documentation"]], "Why is downscaling important \u26c8?": [[2, "why-is-downscaling-important"]], "What is the Perfect Prognosis \ud83c\udf0f\ud83d\udcab\u2614\ufe0f?": [[2, "what-is-the-perfect-prognosis"]], "What can PyESD do \ud83d\ude0e \ud83d\udcaa?": [[2, "what-can-pyesd-do"]], "What pyESD can\u2019t do \ud83d\udc4e?": [[2, "what-pyesd-can-t-do"]], "Who developed pyESD \ud83d\udc69\ud83c\udfff\u200d\ud83d\udcbb?": [[2, "who-developed-pyesd"]], "Getting in touch with us \u270d\ud83c\udffd": [[2, "getting-in-touch-with-us"]], "Some papers and preprints that have used pyESD": [[2, "some-papers-and-preprints-that-have-used-pyesd"]], "Documentation": [[2, "documentation"]], "License": [[2, "license"]], "Indices and tables": [[2, "indices-and-tables"]], "Installation": [[3, "installation"]], "Install from PyPI": [[3, "install-from-pypi"]], "Install from Github": [[3, "install-from-github"]], "Common issues": [[3, "common-issues"]], "Dependencies": [[3, "dependencies"]], "Methods": [[4, "methods"]], "Modelling framework": [[4, "modelling-framework"]], "API Reference": [[5, "api-reference"]], "pyESD Documentation": [[6, "module-pyESD"]], "Submodules": [[6, "submodules"]], "pyESD.StationOperator module": [[6, "module-pyESD.StationOperator"]], "pyESD.ESD_utils module": [[6, "module-pyESD.ESD_utils"]], "pyESD.Predictor_Base module": [[6, "module-pyESD.Predictor_Base"]], "pyESD.Predictor_Generator module": [[6, "module-pyESD.Predictor_Generator"]], "pyESD.Weatherstation module": [[6, "module-pyESD.Weatherstation"]], "pyESD.dense_models module": [[6, "module-pyESD.dense_models"]], "pyESD.ensemble_models module": [[6, "module-pyESD.ensemble_models"]], "pyESD.feature_selection module": [[6, "module-pyESD.feature_selection"]], "pyESD.metrics module": [[6, "module-pyESD.metrics"]], "pyESD.models module": [[6, "module-pyESD.models"]], "pyESD.plot module": [[6, "module-pyESD.plot"]], "pyESD.plot_utils module": [[6, "module-pyESD.plot_utils"]], "pyESD.predictand module": [[6, "module-pyESD.predictand"]], "pyESD.splitter module": [[6, "module-pyESD.splitter"]], "pyESD.standardizer module": [[6, "module-pyESD.standardizer"]], "pyESD.teleconnections module": [[6, "module-pyESD.teleconnections"]], "pyESD.data_preprocessing_utils module": [[6, "pyesd-data-preprocessing-utils-module"]], "pyESD.MLR module": [[6, "module-pyESD.MLR_model"]], "Testing": [[7, "testing"]], "UNITTEST FRAMEWORK": [[7, "unittest-framework"]], "tutorials": [[8, "tutorials"]], "Using pyESD for Downscaling Climate Information \ud83e\udd57": [[8, "using-pyesd-for-downscaling-climate-information"]], "Preprocessing Data for pyESD \ud83c\udf68": [[8, "preprocessing-data-for-pyesd"]], "What Do the Datasets Look Like \ud83d\udcf7?": [[8, "what-do-the-datasets-look-like"]], "Selecting Predictors for ESD": [[8, "selecting-predictors-for-esd"]], "Including Large-Scale Teleconnection Indices\ud83c\udf0f": [[8, "including-large-scale-teleconnection-indices"]], "How to select the optimal model for ESD \ud83d\udc69\ud83c\udffc\u200d\ud83d\udd27": [[8, "how-to-select-the-optimal-model-for-esd"]], "Coupling ESD to GCMs for future prediction": [[8, "coupling-esd-to-gcms-for-future-prediction"]], "Visualization and Data Analysis": [[8, "visualization-and-data-analysis"]]}, "indexentries": {"bootstrappedforwardselection (class in pyesd.mlr_model)": [[6, "pyESD.MLR_model.BootstrappedForwardSelection"]], "bootstrappedregression (class in pyesd.mlr_model)": [[6, "pyESD.MLR_model.BootstrappedRegression"]], "computestat() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.ComputeStat"]], "dataset (class in pyesd.esd_utils)": [[6, "pyESD.ESD_utils.Dataset"]], "deeplearningregressor (class in pyesd.dense_models)": [[6, "pyESD.dense_models.DeepLearningRegressor"]], "ea (class in pyesd.teleconnections)": [[6, "pyESD.teleconnections.EA"]], "eawr (class in pyesd.teleconnections)": [[6, "pyESD.teleconnections.EAWR"]], "ensembleregressor (class in pyesd.ensemble_models)": [[6, "pyESD.ensemble_models.EnsembleRegressor"]], "evaluate (class in pyesd.metrics)": [[6, "pyESD.metrics.Evaluate"]], "forwardselection (class in pyesd.mlr_model)": [[6, "pyESD.MLR_model.ForwardSelection"]], "hyperparameteroptimize (class in pyesd.models)": [[6, "pyESD.models.HyperparameterOptimize"]], "mae() (pyesd.metrics.evaluate method)": [[6, "pyESD.metrics.Evaluate.MAE"]], "mei (class in pyesd.teleconnections)": [[6, "pyESD.teleconnections.MEI"]], "mse() (pyesd.metrics.evaluate method)": [[6, "pyESD.metrics.Evaluate.MSE"]], "metaattributes (class in pyesd.models)": [[6, "pyESD.models.MetaAttributes"]], "midpointnormalize (class in pyesd.esd_utils)": [[6, "pyESD.ESD_utils.MidpointNormalize"]], "monthlybooststrapper (class in pyesd.splitter)": [[6, "pyESD.splitter.MonthlyBooststrapper"]], "monthlystandardizer (class in pyesd.standardizer)": [[6, "pyESD.standardizer.MonthlyStandardizer"]], "multiplelsregression (class in pyesd.mlr_model)": [[6, "pyESD.MLR_model.MultipleLSRegression"]], "nao (class in pyesd.teleconnections)": [[6, "pyESD.teleconnections.NAO"]], "nse() (pyesd.metrics.evaluate method)": [[6, "pyESD.metrics.Evaluate.NSE"]], "nostandardizer (class in pyesd.standardizer)": [[6, "pyESD.standardizer.NoStandardizer"]], "pcascaling (class in pyesd.standardizer)": [[6, "pyESD.standardizer.PCAScaling"]], "predictandtimeseries (class in pyesd.predictand)": [[6, "pyESD.predictand.PredictandTimeseries"]], "predictor (class in pyesd.predictor_base)": [[6, "pyESD.Predictor_Base.Predictor"]], "r2_score() (pyesd.metrics.evaluate method)": [[6, "pyESD.metrics.Evaluate.R2_score"]], "rmse() (pyesd.metrics.evaluate method)": [[6, "pyESD.metrics.Evaluate.RMSE"]], "recursivefeatureelimination (class in pyesd.feature_selection)": [[6, "pyESD.feature_selection.RecursiveFeatureElimination"]], "regionalaverage (class in pyesd.predictor_generator)": [[6, "pyESD.Predictor_Generator.RegionalAverage"]], "regressors (class in pyesd.models)": [[6, "pyESD.models.Regressors"]], "scan (class in pyesd.teleconnections)": [[6, "pyESD.teleconnections.SCAN"]], "sequentialfeatureselection (class in pyesd.feature_selection)": [[6, "pyESD.feature_selection.SequentialFeatureSelection"]], "splitter (class in pyesd.splitter)": [[6, "pyESD.splitter.Splitter"]], "stackarray() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.StackArray"]], "standardscaling (class in pyesd.standardizer)": [[6, "pyESD.standardizer.StandardScaling"]], "stattest() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.StatTest"]], "stationoperator (class in pyesd.stationoperator)": [[6, "pyESD.StationOperator.StationOperator"]], "treebasedselection (class in pyesd.feature_selection)": [[6, "pyESD.feature_selection.TreeBasedSelection"]], "yearlybootstrapper (class in pyesd.splitter)": [[6, "pyESD.splitter.YearlyBootstrapper"]], "_get_active() (in module pyesd.mlr_model)": [[6, "pyESD.MLR_model._get_active"]], "_get_month() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils._get_month"]], "_get_month() (in module pyesd.teleconnections)": [[6, "pyESD.teleconnections._get_month"]], "add_seasonal_cycle() (in module pyesd.standardizer)": [[6, "pyESD.standardizer.add_seasonal_cycle"]], "adjusted_r2() (pyesd.metrics.evaluate method)": [[6, "pyESD.metrics.Evaluate.adjusted_r2"]], "alpha() (pyesd.models.metaattributes method)": [[6, "pyESD.models.MetaAttributes.alpha"]], "apply_style() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.apply_style"]], "average_additional_results() (pyesd.mlr_model.forwardselection method)": [[6, "pyESD.MLR_model.ForwardSelection.average_additional_results"]], "average_coefs() (pyesd.mlr_model.forwardselection method)": [[6, "pyESD.MLR_model.ForwardSelection.average_coefs"]], "barplot() (in module pyesd.plot)": [[6, "pyESD.plot.barplot"]], "barplot_data() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.barplot_data"]], "best_estimator() (pyesd.models.hyperparameteroptimize method)": [[6, "pyESD.models.HyperparameterOptimize.best_estimator"]], "best_estimator() (pyesd.models.metaattributes method)": [[6, "pyESD.models.MetaAttributes.best_estimator"]], "best_params() (pyesd.models.metaattributes method)": [[6, "pyESD.models.MetaAttributes.best_params"]], "boxplot() (in module pyesd.plot)": [[6, "pyESD.plot.boxplot"]], "boxplot_data() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.boxplot_data"]], "build_model() (pyesd.dense_models.deeplearningregressor method)": [[6, "pyESD.dense_models.DeepLearningRegressor.build_model"]], "climate_score() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.climate_score"]], "climate_score() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.climate_score"]], "coef() (pyesd.models.metaattributes method)": [[6, "pyESD.models.MetaAttributes.coef"]], "compile_model() (pyesd.dense_models.deeplearningregressor method)": [[6, "pyESD.dense_models.DeepLearningRegressor.compile_model"]], "convert_to_sklearn_regressor() (pyesd.dense_models.deeplearningregressor method)": [[6, "pyESD.dense_models.DeepLearningRegressor.convert_to_sklearn_regressor"]], "correlation_data() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.correlation_data"]], "correlation_heatmap() (in module pyesd.plot)": [[6, "pyESD.plot.correlation_heatmap"]], "count_predictors() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.count_predictors"]], "cross_val_predict() (pyesd.ensemble_models.ensembleregressor method)": [[6, "pyESD.ensemble_models.EnsembleRegressor.cross_val_predict"]], "cross_val_predict() (pyesd.models.hyperparameteroptimize method)": [[6, "pyESD.models.HyperparameterOptimize.cross_val_predict"]], "cross_val_predict() (pyesd.models.regressors method)": [[6, "pyESD.models.Regressors.cross_val_predict"]], "cross_val_score() (pyesd.ensemble_models.ensembleregressor method)": [[6, "pyESD.ensemble_models.EnsembleRegressor.cross_val_score"]], "cross_val_score() (pyesd.models.hyperparameteroptimize method)": [[6, "pyESD.models.HyperparameterOptimize.cross_val_score"]], "cross_val_score() (pyesd.models.regressors method)": [[6, "pyESD.models.Regressors.cross_val_score"]], "cross_validate() (pyesd.ensemble_models.ensembleregressor method)": [[6, "pyESD.ensemble_models.EnsembleRegressor.cross_validate"]], "cross_validate() (pyesd.models.hyperparameteroptimize method)": [[6, "pyESD.models.HyperparameterOptimize.cross_validate"]], "cross_validate() (pyesd.models.regressors method)": [[6, "pyESD.models.Regressors.cross_validate"]], "cross_validate_and_predict() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.cross_validate_and_predict"]], "cross_validate_and_predict() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.cross_validate_and_predict"]], "cv_test_score() (pyesd.feature_selection.recursivefeatureelimination method)": [[6, "pyESD.feature_selection.RecursiveFeatureElimination.cv_test_score"]], "ensemble_transform() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.ensemble_transform"]], "ensemble_transform() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.ensemble_transform"]], "eof_analysis() (in module pyesd.teleconnections)": [[6, "pyESD.teleconnections.eof_analysis"]], "evaluate() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.evaluate"]], "evaluate() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.evaluate"]], "explained_variance() (pyesd.metrics.evaluate method)": [[6, "pyESD.metrics.Evaluate.explained_variance"]], "extract_comparison_data_means() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.extract_comparison_data_means"]], "extract_indices_around() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.extract_indices_around"]], "extract_region() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.extract_region"]], "extract_region() (in module pyesd.teleconnections)": [[6, "pyESD.teleconnections.extract_region"]], "extract_time_series() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.extract_time_series"]], "feature_importance() (pyesd.feature_selection.treebasedselection method)": [[6, "pyESD.feature_selection.TreeBasedSelection.feature_importance"]], "fit() (pyesd.mlr_model.bootstrappedregression method)": [[6, "pyESD.MLR_model.BootstrappedRegression.fit"]], "fit() (pyesd.mlr_model.forwardselection method)": [[6, "pyESD.MLR_model.ForwardSelection.fit"]], "fit() (pyesd.mlr_model.multiplelsregression method)": [[6, "pyESD.MLR_model.MultipleLSRegression.fit"]], "fit() (pyesd.predictor_base.predictor method)": [[6, "pyESD.Predictor_Base.Predictor.fit"]], "fit() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.fit"]], "fit() (pyesd.dense_models.deeplearningregressor method)": [[6, "pyESD.dense_models.DeepLearningRegressor.fit"]], "fit() (pyesd.ensemble_models.ensembleregressor method)": [[6, "pyESD.ensemble_models.EnsembleRegressor.fit"]], "fit() (pyesd.feature_selection.recursivefeatureelimination method)": [[6, "pyESD.feature_selection.RecursiveFeatureElimination.fit"]], "fit() (pyesd.feature_selection.sequentialfeatureselection method)": [[6, "pyESD.feature_selection.SequentialFeatureSelection.fit"]], "fit() (pyesd.feature_selection.treebasedselection method)": [[6, "pyESD.feature_selection.TreeBasedSelection.fit"]], "fit() (pyesd.models.hyperparameteroptimize method)": [[6, "pyESD.models.HyperparameterOptimize.fit"]], "fit() (pyesd.models.regressors method)": [[6, "pyESD.models.Regressors.fit"]], "fit() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.fit"]], "fit() (pyesd.standardizer.monthlystandardizer method)": [[6, "pyESD.standardizer.MonthlyStandardizer.fit"]], "fit() (pyesd.standardizer.nostandardizer method)": [[6, "pyESD.standardizer.NoStandardizer.fit"]], "fit() (pyesd.standardizer.pcascaling method)": [[6, "pyESD.standardizer.PCAScaling.fit"]], "fit() (pyesd.standardizer.standardscaling method)": [[6, "pyESD.standardizer.StandardScaling.fit"]], "fit_active() (pyesd.mlr_model.forwardselection method)": [[6, "pyESD.MLR_model.ForwardSelection.fit_active"]], "fit_predict() (pyesd.mlr_model.bootstrappedregression method)": [[6, "pyESD.MLR_model.BootstrappedRegression.fit_predict"]], "fit_predictor() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.fit_predictor"]], "fit_predictor() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.fit_predictor"]], "fit_transform() (pyesd.standardizer.pcascaling method)": [[6, "pyESD.standardizer.PCAScaling.fit_transform"]], "get() (pyesd.esd_utils.dataset method)": [[6, "pyESD.ESD_utils.Dataset.get"]], "get() (pyesd.predictor_base.predictor method)": [[6, "pyESD.Predictor_Base.Predictor.get"]], "get() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.get"]], "get_annual_mean_cycle() (in module pyesd.standardizer)": [[6, "pyESD.standardizer.get_annual_mean_cycle"]], "get_explained_variance() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.get_explained_variance"]], "get_mean_prediction() (in module pyesd.standardizer)": [[6, "pyESD.standardizer.get_mean_prediction"]], "get_n_splits() (pyesd.splitter.splitter method)": [[6, "pyESD.splitter.Splitter.get_n_splits"]], "get_params() (pyesd.ensemble_models.ensembleregressor method)": [[6, "pyESD.ensemble_models.EnsembleRegressor.get_params"]], "get_params() (pyesd.models.metaattributes method)": [[6, "pyESD.models.MetaAttributes.get_params"]], "get_var() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.get_var"]], "haversine() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.haversine"]], "heatmaps() (in module pyesd.plot)": [[6, "pyESD.plot.heatmaps"]], "intercept() (pyesd.models.metaattributes method)": [[6, "pyESD.models.MetaAttributes.intercept"]], "inverse_transform() (pyesd.standardizer.monthlystandardizer method)": [[6, "pyESD.standardizer.MonthlyStandardizer.inverse_transform"]], "inverse_transform() (pyesd.standardizer.nostandardizer method)": [[6, "pyESD.standardizer.NoStandardizer.inverse_transform"]], "inverse_transform() (pyesd.standardizer.pcascaling method)": [[6, "pyESD.standardizer.PCAScaling.inverse_transform"]], "inverse_transform() (pyesd.standardizer.standardscaling method)": [[6, "pyESD.standardizer.StandardScaling.inverse_transform"]], "levene_test() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.levene_test"]], "lineplot() (in module pyesd.plot)": [[6, "pyESD.plot.lineplot"]], "load() (pyesd.predictor_base.predictor method)": [[6, "pyESD.Predictor_Base.Predictor.load"]], "load_all_stations() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.load_all_stations"]], "load_csv() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.load_csv"]], "load_pickle() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.load_pickle"]], "load_station() (in module pyesd.stationoperator)": [[6, "pyESD.StationOperator.load_station"]], "map_to_xarray() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.map_to_xarray"]], "max_error() (pyesd.metrics.evaluate method)": [[6, "pyESD.metrics.Evaluate.max_error"]], "module": [[6, "module-pyESD"], [6, "module-pyESD.ESD_utils"], [6, "module-pyESD.MLR_model"], [6, "module-pyESD.Predictor_Base"], [6, "module-pyESD.Predictor_Generator"], [6, "module-pyESD.StationOperator"], [6, "module-pyESD.Weatherstation"], [6, "module-pyESD.dense_models"], [6, "module-pyESD.ensemble_models"], [6, "module-pyESD.feature_selection"], [6, "module-pyESD.metrics"], [6, "module-pyESD.models"], [6, "module-pyESD.plot"], [6, "module-pyESD.plot_utils"], [6, "module-pyESD.predictand"], [6, "module-pyESD.splitter"], [6, "module-pyESD.standardizer"], [6, "module-pyESD.teleconnections"]], "monthly_mean() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.monthly_mean"]], "permutation_importance_() (pyesd.feature_selection.treebasedselection method)": [[6, "pyESD.feature_selection.TreeBasedSelection.permutation_importance_"]], "plot() (pyesd.predictor_base.predictor method)": [[6, "pyESD.Predictor_Base.Predictor.plot"]], "plot_background() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.plot_background"]], "plot_cov_matrix() (pyesd.teleconnections.ea method)": [[6, "pyESD.teleconnections.EA.plot_cov_matrix"]], "plot_cov_matrix() (pyesd.teleconnections.eawr method)": [[6, "pyESD.teleconnections.EAWR.plot_cov_matrix"]], "plot_cov_matrix() (pyesd.teleconnections.nao method)": [[6, "pyESD.teleconnections.NAO.plot_cov_matrix"]], "plot_cov_matrix() (pyesd.teleconnections.scan method)": [[6, "pyESD.teleconnections.SCAN.plot_cov_matrix"]], "plot_ks_stats() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.plot_ks_stats"]], "plot_monthly_mean() (in module pyesd.plot)": [[6, "pyESD.plot.plot_monthly_mean"]], "plot_network() (pyesd.dense_models.deeplearningregressor method)": [[6, "pyESD.dense_models.DeepLearningRegressor.plot_network"]], "plot_projection_comparison() (in module pyesd.plot)": [[6, "pyESD.plot.plot_projection_comparison"]], "plot_time_series() (in module pyesd.plot)": [[6, "pyESD.plot.plot_time_series"]], "predict() (pyesd.mlr_model.bootstrappedregression method)": [[6, "pyESD.MLR_model.BootstrappedRegression.predict"]], "predict() (pyesd.mlr_model.forwardselection method)": [[6, "pyESD.MLR_model.ForwardSelection.predict"]], "predict() (pyesd.mlr_model.multiplelsregression method)": [[6, "pyESD.MLR_model.MultipleLSRegression.predict"]], "predict() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.predict"]], "predict() (pyesd.dense_models.deeplearningregressor method)": [[6, "pyESD.dense_models.DeepLearningRegressor.predict"]], "predict() (pyesd.ensemble_models.ensembleregressor method)": [[6, "pyESD.ensemble_models.EnsembleRegressor.predict"]], "predict() (pyesd.models.regressors method)": [[6, "pyESD.models.Regressors.predict"]], "predict() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.predict"]], "predict_active() (pyesd.mlr_model.forwardselection method)": [[6, "pyESD.MLR_model.ForwardSelection.predict_active"]], "predict_average() (pyesd.ensemble_models.ensembleregressor method)": [[6, "pyESD.ensemble_models.EnsembleRegressor.predict_average"]], "predict_log_proba() (pyesd.models.hyperparameteroptimize method)": [[6, "pyESD.models.HyperparameterOptimize.predict_log_proba"]], "prediction_example_data() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.prediction_example_data"]], "predictor_correlation() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.predictor_correlation"]], "predictor_correlation() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.predictor_correlation"]], "print_selected_features() (pyesd.feature_selection.recursivefeatureelimination method)": [[6, "pyESD.feature_selection.RecursiveFeatureElimination.print_selected_features"]], "print_selected_features() (pyesd.feature_selection.sequentialfeatureselection method)": [[6, "pyESD.feature_selection.SequentialFeatureSelection.print_selected_features"]], "print_selected_features() (pyesd.feature_selection.treebasedselection method)": [[6, "pyESD.feature_selection.TreeBasedSelection.print_selected_features"]], "pyesd": [[6, "module-pyESD"]], "pyesd.esd_utils": [[6, "module-pyESD.ESD_utils"]], "pyesd.mlr_model": [[6, "module-pyESD.MLR_model"]], "pyesd.predictor_base": [[6, "module-pyESD.Predictor_Base"]], "pyesd.predictor_generator": [[6, "module-pyESD.Predictor_Generator"]], "pyesd.stationoperator": [[6, "module-pyESD.StationOperator"]], "pyesd.weatherstation": [[6, "module-pyESD.Weatherstation"]], "pyesd.dense_models": [[6, "module-pyESD.dense_models"]], "pyesd.ensemble_models": [[6, "module-pyESD.ensemble_models"]], "pyesd.feature_selection": [[6, "module-pyESD.feature_selection"]], "pyesd.metrics": [[6, "module-pyESD.metrics"]], "pyesd.models": [[6, "module-pyESD.models"]], "pyesd.plot": [[6, "module-pyESD.plot"]], "pyesd.plot_utils": [[6, "module-pyESD.plot_utils"]], "pyesd.predictand": [[6, "module-pyESD.predictand"]], "pyesd.splitter": [[6, "module-pyESD.splitter"]], "pyesd.standardizer": [[6, "module-pyESD.standardizer"]], "pyesd.teleconnections": [[6, "module-pyESD.teleconnections"]], "ranksums_test() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.ranksums_test"]], "read_station_csv() (in module pyesd.weatherstation)": [[6, "pyESD.Weatherstation.read_station_csv"]], "read_weatherstationnames() (in module pyesd.weatherstation)": [[6, "pyESD.Weatherstation.read_weatherstationnames"]], "read_weatherstations() (in module pyesd.weatherstation)": [[6, "pyESD.Weatherstation.read_weatherstations"]], "relative_predictor_importance() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.relative_predictor_importance"]], "relative_predictor_importance() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.relative_predictor_importance"]], "remove_seasonal_cycle() (in module pyesd.standardizer)": [[6, "pyESD.standardizer.remove_seasonal_cycle"]], "resample_monthly() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.resample_monthly"]], "resample_seasonally() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.resample_seasonally"]], "save() (pyesd.predictor_base.predictor method)": [[6, "pyESD.Predictor_Base.Predictor.save"]], "save() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.save"]], "scatterplot() (in module pyesd.plot)": [[6, "pyESD.plot.scatterplot"]], "score() (pyesd.ensemble_models.ensembleregressor method)": [[6, "pyESD.ensemble_models.EnsembleRegressor.score"]], "score() (pyesd.feature_selection.recursivefeatureelimination method)": [[6, "pyESD.feature_selection.RecursiveFeatureElimination.score"]], "score() (pyesd.feature_selection.sequentialfeatureselection method)": [[6, "pyESD.feature_selection.SequentialFeatureSelection.score"]], "score() (pyesd.models.hyperparameteroptimize method)": [[6, "pyESD.models.HyperparameterOptimize.score"]], "score() (pyesd.models.regressors method)": [[6, "pyESD.models.Regressors.score"]], "seasonal_mean() (in module pyesd.plot_utils)": [[6, "pyESD.plot_utils.seasonal_mean"]], "selected_names() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.selected_names"]], "selected_names() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.selected_names"]], "set_additional_results() (pyesd.mlr_model.forwardselection method)": [[6, "pyESD.MLR_model.ForwardSelection.set_additional_results"]], "set_expand_coefs() (pyesd.mlr_model.multiplelsregression method)": [[6, "pyESD.MLR_model.MultipleLSRegression.set_expand_coefs"]], "set_model() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.set_model"]], "set_model() (pyesd.models.regressors method)": [[6, "pyESD.models.Regressors.set_model"]], "set_model() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.set_model"]], "set_params() (pyesd.models.metaattributes method)": [[6, "pyESD.models.MetaAttributes.set_params"]], "set_predictors() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.set_predictors"]], "set_predictors() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.set_predictors"]], "set_standardizer() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.set_standardizer"]], "set_standardizer() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.set_standardizer"]], "set_transform() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.set_transform"]], "set_transform() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.set_transform"]], "split() (pyesd.splitter.monthlybooststrapper method)": [[6, "pyESD.splitter.MonthlyBooststrapper.split"]], "split() (pyesd.splitter.splitter method)": [[6, "pyESD.splitter.Splitter.split"]], "split() (pyesd.splitter.yearlybootstrapper method)": [[6, "pyESD.splitter.YearlyBootstrapper.split"]], "store_csv() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.store_csv"]], "store_pickle() (in module pyesd.esd_utils)": [[6, "pyESD.ESD_utils.store_pickle"]], "transform() (pyesd.ensemble_models.ensembleregressor method)": [[6, "pyESD.ensemble_models.EnsembleRegressor.transform"]], "transform() (pyesd.feature_selection.recursivefeatureelimination method)": [[6, "pyESD.feature_selection.RecursiveFeatureElimination.transform"]], "transform() (pyesd.feature_selection.sequentialfeatureselection method)": [[6, "pyESD.feature_selection.SequentialFeatureSelection.transform"]], "transform() (pyesd.feature_selection.treebasedselection method)": [[6, "pyESD.feature_selection.TreeBasedSelection.transform"]], "transform() (pyesd.models.hyperparameteroptimize method)": [[6, "pyESD.models.HyperparameterOptimize.transform"]], "transform() (pyesd.standardizer.monthlystandardizer method)": [[6, "pyESD.standardizer.MonthlyStandardizer.transform"]], "transform() (pyesd.standardizer.nostandardizer method)": [[6, "pyESD.standardizer.NoStandardizer.transform"]], "transform() (pyesd.standardizer.pcascaling method)": [[6, "pyESD.standardizer.PCAScaling.transform"]], "transform() (pyesd.standardizer.standardscaling method)": [[6, "pyESD.standardizer.StandardScaling.transform"]], "tree_based_feature_importance() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.tree_based_feature_importance"]], "tree_based_feature_importance() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.tree_based_feature_importance"]], "tree_based_feature_permutation_importance() (pyesd.stationoperator.stationoperator method)": [[6, "pyESD.StationOperator.StationOperator.tree_based_feature_permutation_importance"]], "tree_based_feature_permutation_importance() (pyesd.predictand.predictandtimeseries method)": [[6, "pyESD.predictand.PredictandTimeseries.tree_based_feature_permutation_importance"]]}})