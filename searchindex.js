Search.setIndex({"docnames": ["examples", "index", "installation", "methods", "modules", "pyESD", "testing"], "filenames": ["examples.rst", "index.rst", "installation.rst", "methods.rst", "modules.rst", "pyESD.rst", "testing.rst"], "titles": ["Practical examples", "Python framwork for Empirical Statistical Downscaling", "Installation", "Methods", "API Reference", "pyESD package", "&lt;no title&gt;"], "terms": {"pyesd": [1, 2, 4], "i": [1, 2, 4, 5], "an": [1, 2, 5], "open": 1, "sourc": [1, 5], "framework": 1, "perfect": 1, "prognosi": 1, "approach": 1, "ani": 1, "climat": [1, 5], "relat": 1, "variabl": [1, 5], "precipit": 1, "temperatur": 1, "wind": 1, "speed": 1, "us": [1, 2, 5], "reanalysi": 1, "product": 1, "eg": 1, "era5": 1, "predictor": [1, 3, 4, 5], "The": [1, 2, 5], "packag": [1, 2, 4], "featur": 1, "all": [1, 5], "cycl": [1, 5], "includ": 1, "data": [1, 3, 5], "preprocess": 1, "select": [1, 3, 5], "construct": [1, 3], "transform": [1, 4, 5], "model": [1, 4], "train": [1, 3, 5], "valid": [1, 5], "evalu": [1, 3, 4, 5], "futur": 1, "predict": [1, 4, 5], "serv": 1, "mean": [1, 5], "gener": [1, 5], "circul": 1, "high": 1, "resolut": 1, "relev": 1, "impact": 1, "assess": 1, "drought": 1, "flood": 1, "wildfir": 1, "risk": 1, "other": [1, 5], "main": 1, "specialti": 1, "well": 1, "design": 1, "oop": 1, "style": 1, "consid": 1, "weather": 1, "station": 1, "individu": 1, "object": [1, 5], "routin": [1, 5], "attribut": [1, 5], "thi": [1, 4, 5], "ensur": 1, "fewer": 1, "line": 1, "code": 1, "cover": 1, "end": 1, "chang": 1, "mani": 1, "machin": 1, "learn": [1, 3], "algorithm": [1, 5], "techniqu": 1, "can": [1, 2, 5], "experi": 1, "toward": 1, "robust": [1, 5], "transfer": [1, 3], "function": [1, 3], "coupl": [1, 3], "gcm": [1, 3], "estim": [1, 5], "And": 1, "ar": [1, 5], "highlight": 1, "paper": 1, "descript": [1, 5], "submit": 1, "instal": 1, "from": [1, 4, 5], "pypi": 1, "github": 1, "depend": [1, 5], "method": [1, 5], "practic": 1, "exampl": [1, 5], "api": 1, "refer": 1, "publish": 1, "under": [1, 4], "mit": 1, "copyright": 1, "c": 1, "2023": 1, "daniel": 1, "boateng": 1, "index": [1, 5], "modul": [1, 2, 4], "search": 1, "page": 1, "standard": [2, 4], "version": [2, 5], "intal": 2, "pip": 2, "same": [2, 5], "edit": 2, "mode": 2, "e": [2, 5], "flag": 2, "updat": 2, "develop": [2, 4], "clone": 2, "git": 2, "com": 2, "dan": 2, "boat": 2, "folder": 2, "It": [2, 5], "recommend": [2, 5], "isol": 2, "environ": 2, "virtualenv": 2, "conda": 2, "creat": [2, 5], "new": [2, 5], "requir": [2, 4], "some": [2, 5], "through": 2, "distro": 2, "If": [2, 5], "fail": 2, "follow": [2, 5], "manual": 2, "cartopi": 2, "sklearn": [2, 5], "xarrai": 2, "panda": [2, 5], "seaborn": 2, "tensorflow": 2, "matplotlib": 2, "netcdf4": 2, "prepar": 3, "submodul": 4, "esd_util": 4, "predictor_bas": 4, "fit": [4, 5], "get": [4, 5], "load": [4, 5], "plot": 4, "save": [4, 5], "predictor_gener": 4, "stationoper": 4, "weatherstationpreprocess": 4, "dense_model": 4, "ensemble_model": 4, "feature_select": 4, "recursivefeatureelimin": [4, 5], "cv_test_scor": [4, 5], "print_selected_featur": [4, 5], "score": [4, 5], "sequentialfeatureselect": [4, 5], "treebasedselect": [4, 5], "feature_import": [4, 5], "permutation_importance_": [4, 5], "metric": 4, "mae": [4, 5], "mse": [4, 5], "nse": [4, 5], "r2_score": [4, 5], "rmse": [4, 5], "adjusted_r2": [4, 5], "explained_vari": [4, 5], "max_error": [4, 5], "plot_util": 4, "predictand": 4, "splitter": 4, "monthlybooststrapp": [4, 5], "split": [4, 5], "get_n_split": [4, 5], "yearlybootstrapp": [4, 5], "monthlystandard": [4, 5], "inverse_transform": [4, 5], "nostandard": [4, 5], "pcascal": [4, 5], "fit_transform": [4, 5], "standardsc": [4, 5], "add_seasonal_cycl": [4, 5], "get_annual_mean_cycl": [4, 5], "get_mean_predict": [4, 5], "remove_seasonal_cycl": [4, 5], "teleconnect": 4, "data_preprocessing_util": 4, "mlr": 4, "bootstrappedforwardselect": [4, 5], "bootstrappedregress": [4, 5], "fit_predict": [4, 5], "forwardselect": [4, 5], "average_additional_result": [4, 5], "average_coef": [4, 5], "fit_act": [4, 5], "predict_act": [4, 5], "set_additional_result": [4, 5], "multiplelsregress": [4, 5], "set_expand_coef": [4, 5], "_get_act": [4, 5], "content": 4, "activ": [4, 5], "would": [4, 5], "upgrad": 4, "benefit": 4, "its": 4, "extens": 4, "fri": 5, "nov": 5, "12": 5, "14": 5, "02": 5, "45": 5, "2021": 5, "author": 5, "dboateng": 5, "class": 5, "name": 5, "longnam": 5, "none": 5, "cachedir": 5, "base": 5, "abc": 5, "daterang": 5, "dataset": 5, "regener": 5, "fals": 5, "patterns_from": 5, "params_from": 5, "plot_kwarg": 5, "mon": 5, "jan": 5, "3": 5, "17": 5, "18": 5, "2022": 5, "regressor_nam": 5, "ard": 5, "x": 5, "y": 5, "ridg": 5, "n_featur": 5, "10": 5, "direct": 5, "forward": 5, "randomforest": 5, "wed": 5, "mar": 5, "16": 5, "11": 5, "34": 5, "25": 5, "y_true": 5, "y_pred": 5, "tue": 5, "52": 5, "13": 5, "n_split": 5, "500": 5, "test_siz": 5, "0": 5, "1": 5, "block_siz": 5, "group": 5, "num_block": 5, "num_sampl": 5, "n_block": 5, "paramet": 5, "type": 5, "option": 5, "default": 5, "return": 5, "shuffl": 5, "5": 5, "3333333333333333": 5, "min_month_per_year": 5, "9": 5, "test": 5, "set": 5, "pick": 5, "complet": 5, "year": 5, "you": 5, "like": 5, "yb": 5, "enumer": 5, "x_train": 5, "y_train": 5, "iloc": 5, "x_test": 5, "y_test": 5, "int": 5, "number": 5, "float": 5, "ratio": 5, "minimum": 5, "month": 5, "must": 5, "avail": 5, "pair": 5, "indic": 5, "pd": 5, "datafram": 5, "seri": 5, "dummi": 5, "should": 5, "both": 5, "have": 5, "datetimeindex": 5, "arrai": 5, "sun": 5, "21": 5, "00": 5, "55": 5, "detrend": 5, "scale": 5, "baseestim": 5, "transformermixin": 5, "monthli": 5, "ha": 5, "season": 5, "possibli": 5, "linear": 5, "trend": 5, "sinc": 5, "might": 5, "affect": 5, "remov": 5, "first": 5, "subtract": 5, "annual": 5, "regress": 5, "afterward": 5, "varianc": 5, "bool": 5, "whether": 5, "provid": 5, "calcul": 5, "which": 5, "hold": 5, "Not": 5, "self": 5, "de": 5, "valu": 5, "previous": 5, "param": 5, "x_unstandard": 5, "unstandard": 5, "x_transform": 5, "just": 5, "doe": 5, "noth": 5, "n_compon": 5, "kernel": 5, "fit_param": 5, "shape": 5, "n_sampl": 5, "input": 5, "sampl": 5, "n_output": 5, "target": 5, "unsupervis": 5, "dict": 5, "addit": 5, "x_new": 5, "ndarrai": 5, "n_features_new": 5, "with_std": 5, "true": 5, "with_mean": 5, "unit_vari": 5, "norm": 5, "l2": 5, "t": 5, "anomali": 5, "add": 5, "mean_seasonal_cycl": 5, "numpi": 5, "time": 5, "re": 5, "column": 5, "each": 5, "invers": 5, "oper": 5, "7": 5, "28": 5, "48": 5, "contain": 5, "There": 5, "three": 5, "layer": 5, "bootstrap": 5, "outer": 5, "implement": 5, "loop": 5, "regressor": 5, "member": 5, "singl": 5, "step": 5, "also": 5, "lasso": 5, "similar": 5, "next": 5, "again": 5, "get_coef": 5, "set_coef": 5, "addition": 5, "mlr_model": 5, "min_explained_vari": 5, "cv": 5, "easi": 5, "interfac": 5, "furthermor": 5, "below": 5, "inclus": 5, "stage": 5, "doesn": 5, "improv": 5, "explain": 5, "least": 5, "amount": 5, "stop": 5, "process": 5, "integ": 5, "cross": 5, "determin": 5, "how": 5, "fold": 5, "n": 5, "where": 5, "some_object": 5, "stat_downscaling_tool": 5, "metaestim": 5, "perform": 5, "multipl": 5, "In": 5, "store": 5, "final": 5, "averag": 5, "linearmodel": 5, "coef_": 5, "intercept_": 5, "howev": 5, "someth": 5, "els": 5, "than": 5, "arithmet": 5, "g": 5, "onli": 5, "taken": 5, "everyth": 5, "zero": 5, "inherit": 5, "extent": 5, "interchangibli": 5, "coef": 5, "list_of_coef": 5, "additional_result": 5, "dictionari": 5, "dure": 5, "need": 5, "case": 5, "list_of_dict": 5, "mean_additional_result": 5, "mean_coef": 5, "after": 5, "coeffici": 5, "were": 5, "nonzero": 5, "cv_error": 5, "error": 5, "here": 5, "otherwis": 5, "stepwis": 5, "most": 5, "promis": 5, "candid": 5, "good": 5, "enough": 5, "outlin": 5, "statist": 5, "analysi": 5, "research": 5, "von": 5, "storch": 5, "1999": 5, "intend": 5, "necessari": 5, "explaned_vari": 5, "list_of_param": 5, "accord": 5, "start": 5, "yhat": 5, "inact": 5, "uncertainti": 5, "deviat": 5, "lowest": 5, "wa": 5, "abort": 5, "previou": 5, "differ": 5, "row": 5, "length": 5, "exp_var": 5, "whose": 5, "add_result": 5, "linearcoefshandlermixin": 5, "ol": 5, "n_predictor": 5, "call": 5, "often": 5, "expand": 5, "current": 5, "them": 5, "wai": 5, "matrix": 5, "x_activ": 5, "more": 5, "inform": 5, "abou": 5, "part": 5, "metadata": 5}, "objects": {"": [[5, 0, 0, "-", "pyESD"]], "pyESD": [[5, 0, 0, "-", "MLR_model"], [5, 0, 0, "-", "Predictor_Base"], [5, 0, 0, "-", "feature_selection"], [5, 0, 0, "-", "metrics"], [5, 0, 0, "-", "splitter"], [5, 0, 0, "-", "standardizer"]], "pyESD.MLR_model": [[5, 1, 1, "", "BootstrappedForwardSelection"], [5, 1, 1, "", "BootstrappedRegression"], [5, 1, 1, "", "ForwardSelection"], [5, 1, 1, "", "MultipleLSRegression"], [5, 3, 1, "", "_get_active"]], "pyESD.MLR_model.BootstrappedRegression": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "fit_predict"], [5, 2, 1, "", "predict"]], "pyESD.MLR_model.ForwardSelection": [[5, 2, 1, "", "average_additional_results"], [5, 2, 1, "", "average_coefs"], [5, 2, 1, "", "fit"], [5, 2, 1, "", "fit_active"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "predict_active"], [5, 2, 1, "", "set_additional_results"]], "pyESD.MLR_model.MultipleLSRegression": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "set_expand_coefs"]], "pyESD.Predictor_Base": [[5, 1, 1, "", "Predictor"]], "pyESD.Predictor_Base.Predictor": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "get"], [5, 2, 1, "", "load"], [5, 2, 1, "", "plot"], [5, 2, 1, "", "save"]], "pyESD.feature_selection": [[5, 1, 1, "", "RecursiveFeatureElimination"], [5, 1, 1, "", "SequentialFeatureSelection"], [5, 1, 1, "", "TreeBasedSelection"]], "pyESD.feature_selection.RecursiveFeatureElimination": [[5, 2, 1, "", "cv_test_score"], [5, 2, 1, "", "fit"], [5, 2, 1, "", "print_selected_features"], [5, 2, 1, "", "score"], [5, 2, 1, "", "transform"]], "pyESD.feature_selection.SequentialFeatureSelection": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "print_selected_features"], [5, 2, 1, "", "score"], [5, 2, 1, "", "transform"]], "pyESD.feature_selection.TreeBasedSelection": [[5, 2, 1, "", "feature_importance"], [5, 2, 1, "", "fit"], [5, 2, 1, "", "permutation_importance_"], [5, 2, 1, "", "print_selected_features"], [5, 2, 1, "", "transform"]], "pyESD.metrics": [[5, 1, 1, "", "Evaluate"]], "pyESD.metrics.Evaluate": [[5, 2, 1, "", "MAE"], [5, 2, 1, "", "MSE"], [5, 2, 1, "", "NSE"], [5, 2, 1, "", "R2_score"], [5, 2, 1, "", "RMSE"], [5, 2, 1, "", "adjusted_r2"], [5, 2, 1, "", "explained_variance"], [5, 2, 1, "", "max_error"]], "pyESD.splitter": [[5, 1, 1, "", "MonthlyBooststrapper"], [5, 1, 1, "", "Splitter"], [5, 1, 1, "", "YearlyBootstrapper"]], "pyESD.splitter.MonthlyBooststrapper": [[5, 2, 1, "", "split"]], "pyESD.splitter.Splitter": [[5, 2, 1, "", "get_n_splits"], [5, 2, 1, "", "split"]], "pyESD.splitter.YearlyBootstrapper": [[5, 2, 1, "", "split"]], "pyESD.standardizer": [[5, 1, 1, "", "MonthlyStandardizer"], [5, 1, 1, "", "NoStandardizer"], [5, 1, 1, "", "PCAScaling"], [5, 1, 1, "", "StandardScaling"], [5, 3, 1, "", "add_seasonal_cycle"], [5, 3, 1, "", "get_annual_mean_cycle"], [5, 3, 1, "", "get_mean_prediction"], [5, 3, 1, "", "remove_seasonal_cycle"]], "pyESD.standardizer.MonthlyStandardizer": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "inverse_transform"], [5, 2, 1, "", "transform"]], "pyESD.standardizer.NoStandardizer": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "inverse_transform"], [5, 2, 1, "", "transform"]], "pyESD.standardizer.PCAScaling": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "fit_transform"], [5, 2, 1, "", "inverse_transform"], [5, 2, 1, "", "transform"]], "pyESD.standardizer.StandardScaling": [[5, 2, 1, "", "fit"], [5, 2, 1, "", "inverse_transform"], [5, 2, 1, "", "transform"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"practic": 0, "exampl": 0, "python": 1, "framwork": 1, "empir": 1, "statist": 1, "downscal": 1, "document": 1, "get": 1, "start": 1, "licens": 1, "indic": 1, "tabl": 1, "instal": 2, "from": 2, "pypi": 2, "github": 2, "depend": 2, "method": 3, "model": [3, 5], "framework": 3, "api": 4, "refer": 4, "pyesd": 5, "packag": 5, "submodul": 5, "esd_util": 5, "modul": 5, "predictor_bas": 5, "predictor_gener": 5, "stationoper": 5, "weatherstationpreprocess": 5, "dense_model": 5, "ensemble_model": 5, "feature_select": 5, "metric": 5, "plot": 5, "plot_util": 5, "predictand": 5, "splitter": 5, "standard": 5, "teleconnect": 5, "data_preprocessing_util": 5, "mlr": 5, "content": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Practical examples": [[0, "practical-examples"]], "Python framwork for Empirical Statistical Downscaling": [[1, "python-framwork-for-empirical-statistical-downscaling"]], "Documentation": [[1, "documentation"]], "Getting Started:": [[1, null]], "License": [[1, "license"]], "Indices and tables": [[1, "indices-and-tables"]], "Installation": [[2, "installation"]], "Install from PyPI": [[2, "install-from-pypi"]], "Install from Github": [[2, "install-from-github"]], "Dependencies": [[2, "dependencies"]], "Methods": [[3, "methods"]], "Modelling framework": [[3, "modelling-framework"]], "API Reference": [[4, "api-reference"]], "pyESD package": [[5, "pyesd-package"]], "Submodules": [[5, "submodules"]], "pyESD.ESD_utils module": [[5, "pyesd-esd-utils-module"]], "pyESD.Predictor_Base module": [[5, "module-pyESD.Predictor_Base"]], "pyESD.Predictor_Generator module": [[5, "pyesd-predictor-generator-module"]], "pyESD.StationOperator module": [[5, "pyesd-stationoperator-module"]], "pyESD.WeatherstationPreprocessing module": [[5, "pyesd-weatherstationpreprocessing-module"]], "pyESD.dense_models module": [[5, "pyesd-dense-models-module"]], "pyESD.ensemble_models module": [[5, "pyesd-ensemble-models-module"]], "pyESD.feature_selection module": [[5, "module-pyESD.feature_selection"]], "pyESD.metrics module": [[5, "module-pyESD.metrics"]], "pyESD.models module": [[5, "pyesd-models-module"]], "pyESD.plot module": [[5, "pyesd-plot-module"]], "pyESD.plot_utils module": [[5, "pyesd-plot-utils-module"]], "pyESD.predictand module": [[5, "pyesd-predictand-module"]], "pyESD.splitter module": [[5, "module-pyESD.splitter"]], "pyESD.standardizer module": [[5, "module-pyESD.standardizer"]], "pyESD.teleconnections module": [[5, "pyesd-teleconnections-module"]], "pyESD.data_preprocessing_utils module": [[5, "pyesd-data-preprocessing-utils-module"]], "pyESD.MLR module": [[5, "module-pyESD.MLR_model"]], "Module contents": [[5, "module-pyESD"]]}, "indexentries": {"bootstrappedforwardselection (class in pyesd.mlr_model)": [[5, "pyESD.MLR_model.BootstrappedForwardSelection"]], "bootstrappedregression (class in pyesd.mlr_model)": [[5, "pyESD.MLR_model.BootstrappedRegression"]], "evaluate (class in pyesd.metrics)": [[5, "pyESD.metrics.Evaluate"]], "forwardselection (class in pyesd.mlr_model)": [[5, "pyESD.MLR_model.ForwardSelection"]], "mae() (pyesd.metrics.evaluate method)": [[5, "pyESD.metrics.Evaluate.MAE"]], "mse() (pyesd.metrics.evaluate method)": [[5, "pyESD.metrics.Evaluate.MSE"]], "monthlybooststrapper (class in pyesd.splitter)": [[5, "pyESD.splitter.MonthlyBooststrapper"]], "monthlystandardizer (class in pyesd.standardizer)": [[5, "pyESD.standardizer.MonthlyStandardizer"]], "multiplelsregression (class in pyesd.mlr_model)": [[5, "pyESD.MLR_model.MultipleLSRegression"]], "nse() (pyesd.metrics.evaluate method)": [[5, "pyESD.metrics.Evaluate.NSE"]], "nostandardizer (class in pyesd.standardizer)": [[5, "pyESD.standardizer.NoStandardizer"]], "pcascaling (class in pyesd.standardizer)": [[5, "pyESD.standardizer.PCAScaling"]], "predictor (class in pyesd.predictor_base)": [[5, "pyESD.Predictor_Base.Predictor"]], "r2_score() (pyesd.metrics.evaluate method)": [[5, "pyESD.metrics.Evaluate.R2_score"]], "rmse() (pyesd.metrics.evaluate method)": [[5, "pyESD.metrics.Evaluate.RMSE"]], "recursivefeatureelimination (class in pyesd.feature_selection)": [[5, "pyESD.feature_selection.RecursiveFeatureElimination"]], "sequentialfeatureselection (class in pyesd.feature_selection)": [[5, "pyESD.feature_selection.SequentialFeatureSelection"]], "splitter (class in pyesd.splitter)": [[5, "pyESD.splitter.Splitter"]], "standardscaling (class in pyesd.standardizer)": [[5, "pyESD.standardizer.StandardScaling"]], "treebasedselection (class in pyesd.feature_selection)": [[5, "pyESD.feature_selection.TreeBasedSelection"]], "yearlybootstrapper (class in pyesd.splitter)": [[5, "pyESD.splitter.YearlyBootstrapper"]], "_get_active() (in module pyesd.mlr_model)": [[5, "pyESD.MLR_model._get_active"]], "add_seasonal_cycle() (in module pyesd.standardizer)": [[5, "pyESD.standardizer.add_seasonal_cycle"]], "adjusted_r2() (pyesd.metrics.evaluate method)": [[5, "pyESD.metrics.Evaluate.adjusted_r2"]], "average_additional_results() (pyesd.mlr_model.forwardselection method)": [[5, "pyESD.MLR_model.ForwardSelection.average_additional_results"]], "average_coefs() (pyesd.mlr_model.forwardselection method)": [[5, "pyESD.MLR_model.ForwardSelection.average_coefs"]], "cv_test_score() (pyesd.feature_selection.recursivefeatureelimination method)": [[5, "pyESD.feature_selection.RecursiveFeatureElimination.cv_test_score"]], "explained_variance() (pyesd.metrics.evaluate method)": [[5, "pyESD.metrics.Evaluate.explained_variance"]], "feature_importance() (pyesd.feature_selection.treebasedselection method)": [[5, "pyESD.feature_selection.TreeBasedSelection.feature_importance"]], "fit() (pyesd.mlr_model.bootstrappedregression method)": [[5, "pyESD.MLR_model.BootstrappedRegression.fit"]], "fit() (pyesd.mlr_model.forwardselection method)": [[5, "pyESD.MLR_model.ForwardSelection.fit"]], "fit() (pyesd.mlr_model.multiplelsregression method)": [[5, "pyESD.MLR_model.MultipleLSRegression.fit"]], "fit() (pyesd.predictor_base.predictor method)": [[5, "pyESD.Predictor_Base.Predictor.fit"]], "fit() (pyesd.feature_selection.recursivefeatureelimination method)": [[5, "pyESD.feature_selection.RecursiveFeatureElimination.fit"]], "fit() (pyesd.feature_selection.sequentialfeatureselection method)": [[5, "pyESD.feature_selection.SequentialFeatureSelection.fit"]], "fit() (pyesd.feature_selection.treebasedselection method)": [[5, "pyESD.feature_selection.TreeBasedSelection.fit"]], "fit() (pyesd.standardizer.monthlystandardizer method)": [[5, "pyESD.standardizer.MonthlyStandardizer.fit"]], "fit() (pyesd.standardizer.nostandardizer method)": [[5, "pyESD.standardizer.NoStandardizer.fit"]], "fit() (pyesd.standardizer.pcascaling method)": [[5, "pyESD.standardizer.PCAScaling.fit"]], "fit() (pyesd.standardizer.standardscaling method)": [[5, "pyESD.standardizer.StandardScaling.fit"]], "fit_active() (pyesd.mlr_model.forwardselection method)": [[5, "pyESD.MLR_model.ForwardSelection.fit_active"]], "fit_predict() (pyesd.mlr_model.bootstrappedregression method)": [[5, "pyESD.MLR_model.BootstrappedRegression.fit_predict"]], "fit_transform() (pyesd.standardizer.pcascaling method)": [[5, "pyESD.standardizer.PCAScaling.fit_transform"]], "get() (pyesd.predictor_base.predictor method)": [[5, "pyESD.Predictor_Base.Predictor.get"]], "get_annual_mean_cycle() (in module pyesd.standardizer)": [[5, "pyESD.standardizer.get_annual_mean_cycle"]], "get_mean_prediction() (in module pyesd.standardizer)": [[5, "pyESD.standardizer.get_mean_prediction"]], "get_n_splits() (pyesd.splitter.splitter method)": [[5, "pyESD.splitter.Splitter.get_n_splits"]], "inverse_transform() (pyesd.standardizer.monthlystandardizer method)": [[5, "pyESD.standardizer.MonthlyStandardizer.inverse_transform"]], "inverse_transform() (pyesd.standardizer.nostandardizer method)": [[5, "pyESD.standardizer.NoStandardizer.inverse_transform"]], "inverse_transform() (pyesd.standardizer.pcascaling method)": [[5, "pyESD.standardizer.PCAScaling.inverse_transform"]], "inverse_transform() (pyesd.standardizer.standardscaling method)": [[5, "pyESD.standardizer.StandardScaling.inverse_transform"]], "load() (pyesd.predictor_base.predictor method)": [[5, "pyESD.Predictor_Base.Predictor.load"]], "max_error() (pyesd.metrics.evaluate method)": [[5, "pyESD.metrics.Evaluate.max_error"]], "module": [[5, "module-pyESD"], [5, "module-pyESD.MLR_model"], [5, "module-pyESD.Predictor_Base"], [5, "module-pyESD.feature_selection"], [5, "module-pyESD.metrics"], [5, "module-pyESD.splitter"], [5, "module-pyESD.standardizer"]], "permutation_importance_() (pyesd.feature_selection.treebasedselection method)": [[5, "pyESD.feature_selection.TreeBasedSelection.permutation_importance_"]], "plot() (pyesd.predictor_base.predictor method)": [[5, "pyESD.Predictor_Base.Predictor.plot"]], "predict() (pyesd.mlr_model.bootstrappedregression method)": [[5, "pyESD.MLR_model.BootstrappedRegression.predict"]], "predict() (pyesd.mlr_model.forwardselection method)": [[5, "pyESD.MLR_model.ForwardSelection.predict"]], "predict() (pyesd.mlr_model.multiplelsregression method)": [[5, "pyESD.MLR_model.MultipleLSRegression.predict"]], "predict_active() (pyesd.mlr_model.forwardselection method)": [[5, "pyESD.MLR_model.ForwardSelection.predict_active"]], "print_selected_features() (pyesd.feature_selection.recursivefeatureelimination method)": [[5, "pyESD.feature_selection.RecursiveFeatureElimination.print_selected_features"]], "print_selected_features() (pyesd.feature_selection.sequentialfeatureselection method)": [[5, "pyESD.feature_selection.SequentialFeatureSelection.print_selected_features"]], "print_selected_features() (pyesd.feature_selection.treebasedselection method)": [[5, "pyESD.feature_selection.TreeBasedSelection.print_selected_features"]], "pyesd": [[5, "module-pyESD"]], "pyesd.mlr_model": [[5, "module-pyESD.MLR_model"]], "pyesd.predictor_base": [[5, "module-pyESD.Predictor_Base"]], "pyesd.feature_selection": [[5, "module-pyESD.feature_selection"]], "pyesd.metrics": [[5, "module-pyESD.metrics"]], "pyesd.splitter": [[5, "module-pyESD.splitter"]], "pyesd.standardizer": [[5, "module-pyESD.standardizer"]], "remove_seasonal_cycle() (in module pyesd.standardizer)": [[5, "pyESD.standardizer.remove_seasonal_cycle"]], "save() (pyesd.predictor_base.predictor method)": [[5, "pyESD.Predictor_Base.Predictor.save"]], "score() (pyesd.feature_selection.recursivefeatureelimination method)": [[5, "pyESD.feature_selection.RecursiveFeatureElimination.score"]], "score() (pyesd.feature_selection.sequentialfeatureselection method)": [[5, "pyESD.feature_selection.SequentialFeatureSelection.score"]], "set_additional_results() (pyesd.mlr_model.forwardselection method)": [[5, "pyESD.MLR_model.ForwardSelection.set_additional_results"]], "set_expand_coefs() (pyesd.mlr_model.multiplelsregression method)": [[5, "pyESD.MLR_model.MultipleLSRegression.set_expand_coefs"]], "split() (pyesd.splitter.monthlybooststrapper method)": [[5, "pyESD.splitter.MonthlyBooststrapper.split"]], "split() (pyesd.splitter.splitter method)": [[5, "pyESD.splitter.Splitter.split"]], "split() (pyesd.splitter.yearlybootstrapper method)": [[5, "pyESD.splitter.YearlyBootstrapper.split"]], "transform() (pyesd.feature_selection.recursivefeatureelimination method)": [[5, "pyESD.feature_selection.RecursiveFeatureElimination.transform"]], "transform() (pyesd.feature_selection.sequentialfeatureselection method)": [[5, "pyESD.feature_selection.SequentialFeatureSelection.transform"]], "transform() (pyesd.feature_selection.treebasedselection method)": [[5, "pyESD.feature_selection.TreeBasedSelection.transform"]], "transform() (pyesd.standardizer.monthlystandardizer method)": [[5, "pyESD.standardizer.MonthlyStandardizer.transform"]], "transform() (pyesd.standardizer.nostandardizer method)": [[5, "pyESD.standardizer.NoStandardizer.transform"]], "transform() (pyesd.standardizer.pcascaling method)": [[5, "pyESD.standardizer.PCAScaling.transform"]], "transform() (pyesd.standardizer.standardscaling method)": [[5, "pyESD.standardizer.StandardScaling.transform"]]}})